var searchIndex = JSON.parse('{\
"dynasmrt":{"doc":"This crate provides runtime support for dynasm-rs. It…","i":[[14,"dynasm","dynasmrt","The whole point. This macro compiles given assembly/rust…",null,null],[14,"dynasm_backwards","","Similar to `dynasm!`, but the calls to the assembler are…",null,null],[3,"AssemblyOffset","","A struct representing an offset into the assembling buffer…",null,null],[12,"0","","",0,null],[3,"DynamicLabel","","A dynamic label",null,null],[3,"Executor","","A read-only shared reference to the executable buffer…",null,null],[3,"SimpleAssembler","","An assembler that is purely a `Vec<u8>`. It doesn\'t…",null,null],[12,"ops","","The assembling buffer.",1,null],[3,"VecAssembler","","An assembler that assembles into a `Vec<u8>`, while…",null,null],[3,"Assembler","","A full assembler implementation. Supports labels, all…",null,null],[3,"Modifier","","Allows modification of already committed assembly code.…",null,null],[3,"UncommittedModifier","","This struct is a wrapper around an `Assembler` normally…",null,null],[4,"LabelKind","","A description of a label. Used for error reporting.",null,null],[13,"Local","","A local label, like `label:`",2,null],[13,"Global","","A global label, like `->label:`",2,null],[13,"Dynamic","","A dynamic label, like `=>value:`",2,null],[4,"TargetKind","","A description of a relocation target. Used for error…",null,null],[13,"Forward","","This targets a local label with the specified name that…",3,null],[13,"Backward","","This targets a local label with the specified name that…",3,null],[13,"Global","","This targets a global label with the specified name.",3,null],[13,"Dynamic","","This targets the specified dynamic label.",3,null],[13,"Extern","","This targets the specified address.",3,null],[13,"Managed","","An already resolved relocation that needs to be adjusted…",3,null],[4,"DynasmError","","The various error types generated by dynasm functions.",null,null],[13,"CheckFailed","","A check (like `Modifier::check` or…",4,null],[13,"DuplicateLabel","","A duplicate label dynamic/global label was defined",4,null],[13,"UnknownLabel","","An unknown label",4,null],[13,"ImpossibleRelocation","","The user tried to declare a relocation too far away from…",4,null],[0,"mmap","","This module implements some wrappers around Mmap/MmapMut…",null,null],[3,"ExecutableBuffer","dynasmrt::mmap","A structure holding a buffer of executable memory. It also…",null,null],[3,"MutableBuffer","","ExecutableBuffer equivalent that holds a buffer of mutable…",null,null],[11,"ptr","","Obtain a pointer into the executable memory from an offset…",5,[[["assemblyoffset",3]]]],[11,"new","","Create a new executable buffer, backed by a buffer of size…",5,[[],[["executablebuffer",3],["result",6]]]],[11,"size","","Query the backing size of this executable buffer",5,[[]]],[11,"make_mut","","Change this executable buffer into a mutable buffer.",5,[[],[["result",6],["mutablebuffer",3]]]],[11,"new","","Create a new mutable buffer, backed by a buffer of size…",6,[[],[["result",6],["mutablebuffer",3]]]],[11,"size","","Query the backing size of this mutable buffer",6,[[]]],[11,"set_len","","Set the length of the usable part of this mutable buffer.…",6,[[]]],[11,"make_exec","","Change this mutable buffer into an executable buffer.",6,[[],[["executablebuffer",3],["result",6]]]],[0,"components","dynasmrt","This module provides several reusable compoments for…",null,null],[3,"MemoryManager","dynasmrt::components","This struct implements a protection-swapping assembling…",null,null],[3,"LabelRegistry","","A registry of labels. Contains all necessessities for…",null,null],[3,"PatchLoc","","An abstraction of a relocation of type `R`, located at…",null,null],[12,"location","","The AssemblyOffset at which this relocation was emitted",7,null],[12,"field_offset","","The offset, backwards, from location that the actual field…",7,null],[12,"ref_offset","","The offset, backwards, to be subtracted from location to…",7,null],[12,"relocation","","The type of relocation to be emitted.",7,null],[12,"target_offset","","A constant offset added to the destination address of this…",7,null],[3,"RelocRegistry","","A registry of relocations and the respective labels they…",null,null],[3,"ManagedRelocs","","A registry of relocations that have been encoded…",null,null],[3,"LitPool","","Literal pool implementation. One can programmatically push…",null,null],[11,"new","","Create a new memory manager, with `initial_mmap_size` data…",8,[[],["result",6]]],[11,"committed","","Returns the amount of bytes already committed to the manager",8,[[]]],[11,"execbuffer_addr","","Returns the current start address of the managed…",8,[[]]],[11,"commit","","Commits the data from `new` into the managed memory,…",8,[[["vec",3]]]],[11,"write","","Borrow the internal memory buffer mutably",8,[[],[["executablebuffer",3],["rwlockwriteguard",3]]]],[11,"finalize","","finalizes the currently committed part of the buffer.",8,[[],[["executablebuffer",3],["result",4]]]],[11,"reader","","Create an atomically refcounted reference to the internal…",8,[[],[["arc",3],["rwlock",3]]]],[11,"new","","Create a new, empty label registry",9,[[],["labelregistry",3]]],[11,"new_dynamic_label","","Create a new dynamic label id",9,[[],["dynamiclabel",3]]],[11,"define_dynamic","","Define a the dynamic label `id` to be located at `offset`.",9,[[["assemblyoffset",3],["dynamiclabel",3]],[["result",4],["dynasmerror",4]]]],[11,"define_global","","Define a the global label `name` to be located at `offset`.",9,[[["assemblyoffset",3]],[["result",4],["dynasmerror",4]]]],[11,"define_local","","Define a the local label `name` to be located at `offset`.",9,[[["assemblyoffset",3]]]],[11,"resolve_dynamic","","Returns the offset at which the dynamic label `id` was…",9,[[["dynamiclabel",3]],[["dynasmerror",4],["result",4],["assemblyoffset",3]]]],[11,"resolve_global","","Returns the offset at which the global label `name` was…",9,[[],[["dynasmerror",4],["result",4],["assemblyoffset",3]]]],[11,"resolve_local","","Returns the offset at which the last local label named…",9,[[],[["dynasmerror",4],["result",4],["assemblyoffset",3]]]],[11,"new","","create a new `PatchLoc`",7,[[["assemblyoffset",3]],["patchloc",3]]],[11,"range","","Returns a range that covers the entire relocation in its…",7,[[],["range",3]]],[11,"value","","Returns the actual value that should be inserted at the…",7,[[]]],[11,"patch","","Patch `buffer` so that this relocation patch will point to…",7,[[],[["impossiblerelocation",3],["result",4]]]],[11,"adjust","","Patch `buffer` so that this relocation will still point to…",7,[[],[["impossiblerelocation",3],["result",4]]]],[11,"needs_adjustment","","Returns if this patch requires adjustment when the address…",7,[[]]],[11,"new","","Create a new, empty relocation registry.",10,[[],["relocregistry",3]]],[11,"add_global","","Add a new patch targetting the global label `name`.",10,[[["patchloc",3]]]],[11,"add_dynamic","","Add a new patch targetting the dynamic label `id`.",10,[[["patchloc",3],["dynamiclabel",3]]]],[11,"add_local","","Add a new patch targetting the next local label `name`. As…",10,[[["patchloc",3]]]],[11,"take_locals_named","","Return an iterator through all defined relocations…",10,[[]]],[11,"take_globals","","Return an iterator through all defined relocations…",10,[[]]],[11,"take_dynamics","","Return an iterator through all defined relocations…",10,[[]]],[11,"take_locals","","Return an iterator through all defined relocations…",10,[[]]],[11,"new","","Create a new, empty managed relocation registry.",11,[[]]],[11,"add","","Add a relocation to this registry.",11,[[["patchloc",3]]]],[11,"append","","Take all items from another registry and add them to this…",11,[[["managedrelocs",3]]]],[11,"remove_between","","Remove all managed relocations whose byte fields start in…",11,[[]]],[11,"iter","","Iterate through all defined managed relocations.",11,[[]]],[11,"new","","Create a new, empty literal pool",12,[[]]],[11,"align","","Add extra alignment for the next value in the literal pool",12,[[]]],[11,"push_u8","","Encode `value` into the literal pool.",12,[[]]],[11,"push_u16","","Encode `value` into the literal pool.",12,[[]]],[11,"push_u32","","Encode `value` into the literal pool.",12,[[]]],[11,"push_u64","","Encode `value` into the literal pool.",12,[[]]],[11,"push_dynamic","","Encode the relative address of a label into the literal…",12,[[["relocationsize",4],["dynamiclabel",3]]]],[11,"push_global","","Encode the relative address of a label into the literal…",12,[[["relocationsize",4]]]],[11,"push_forward","","Encode the relative address of a label into the literal…",12,[[["relocationsize",4]]]],[11,"push_backward","","Encode the relative address of a label into the literal…",12,[[["relocationsize",4]]]],[11,"emit","","Emit this literal pool into the specified assembler",12,[[]]],[0,"relocations","dynasmrt","This module defines the `Relocation` trait and several…",null,null],[3,"ImpossibleRelocation","dynasmrt::relocations","Error returned when encoding a relocation failed",null,null],[4,"RelocationKind","","Specifies what kind of relocation a relocation is.",null,null],[13,"Relative","","A simple, PC-relative relocation. These can be encoded…",13,null],[13,"AbsToRel","","An absolute relocation to a relative address, i.e. trying…",13,null],[13,"RelToAbs","","A relative relocation to an absolute address, i.e. trying…",13,null],[4,"RelocationSize","","A descriptor for the size of a relocation. This also…",null,null],[13,"Byte","","A byte-sized relocation",14,null],[13,"Word","","A two-byte relocation",14,null],[13,"DWord","","A four-byte sized relocation",14,null],[13,"QWord","","An 8-byte sized relocation",14,null],[8,"Relocation","","Used to inform assemblers on how to implement relocations…",null,null],[16,"Encoding","","The encoded representation for this relocation that is…",15,null],[10,"from_encoding","","construct this relocation from an encoded representation.",15,[[]]],[10,"from_size","","construct this relocation from a simple size. This is used…",15,[[["relocationsize",4]]]],[10,"size","","The size of the slice of bytes affected by this relocation",15,[[]]],[10,"write_value","","Write a value into a buffer of size `self.size()` in the…",15,[[],[["impossiblerelocation",3],["result",4]]]],[10,"read_value","","Read a value from a buffer of size `self.size()` in the…",15,[[]]],[10,"kind","","Specifies what kind of relocation this relocation instance…",15,[[],["relocationkind",4]]],[10,"page_size","","Specifies the default page size on this platform.",15,[[]]],[11,"from_encoding","","Converts back from numeric value to RelocationKind",13,[[]]],[0,"x64","dynasmrt","Runtime support for the x64 architecture assembling target.",null,null],[3,"X64Relocation","dynasmrt::x64","Relocation implementation for the x64 architecture.",null,null],[4,"Rq","","1, 2, 4 or 8-byte general purpose \\\"quad-word\\\" registers.",null,null],[13,"RAX","","",16,null],[13,"RCX","","",16,null],[13,"RDX","","",16,null],[13,"RBX","","",16,null],[13,"RSP","","",16,null],[13,"RBP","","",16,null],[13,"RSI","","",16,null],[13,"RDI","","",16,null],[13,"R8","","",16,null],[13,"R9","","",16,null],[13,"R10","","",16,null],[13,"R11","","",16,null],[13,"R12","","",16,null],[13,"R13","","",16,null],[13,"R14","","",16,null],[13,"R15","","",16,null],[4,"Rx","","16 or 32-byte SSE registers.",null,null],[13,"XMM0","","",17,null],[13,"XMM1","","",17,null],[13,"XMM2","","",17,null],[13,"XMM3","","",17,null],[13,"XMM4","","",17,null],[13,"XMM5","","",17,null],[13,"XMM6","","",17,null],[13,"XMM7","","",17,null],[13,"XMM8","","",17,null],[13,"XMM9","","",17,null],[13,"XMM10","","",17,null],[13,"XMM11","","",17,null],[13,"XMM12","","",17,null],[13,"XMM13","","",17,null],[13,"XMM14","","",17,null],[13,"XMM15","","",17,null],[4,"RC","","8-byte control registers.",null,null],[13,"CR0","","",18,null],[13,"CR1","","",18,null],[13,"CR2","","",18,null],[13,"CR3","","",18,null],[13,"CR4","","",18,null],[13,"CR5","","",18,null],[13,"CR6","","",18,null],[13,"CR7","","",18,null],[13,"CR8","","",18,null],[13,"CR9","","",18,null],[13,"CR10","","",18,null],[13,"CR11","","",18,null],[13,"CR12","","",18,null],[13,"CR13","","",18,null],[13,"CR14","","",18,null],[13,"CR15","","",18,null],[6,"Assembler","","An x64 Assembler. This is aliased here for backwards…",null,null],[6,"AssemblyModifier","","An x64 AssemblyModifier. This is aliased here for…",null,null],[6,"UncommittedModifier","","An x64 UncommittedModifier. This is aliased here for…",null,null],[0,"x86","dynasmrt","Runtime support for the x86 architecture assembling target.",null,null],[3,"X86Relocation","dynasmrt::x86","Relocation implementation for the x86 architecture.",null,null],[4,"Rd","","1, 2 or 4-byte general purpose \\\"double-word\\\" registers.",null,null],[13,"EAX","","",19,null],[13,"ECX","","",19,null],[13,"EDX","","",19,null],[13,"EBX","","",19,null],[13,"ESP","","",19,null],[13,"EBP","","",19,null],[13,"ESI","","",19,null],[13,"EDI","","",19,null],[4,"Rh","","High-byte general purpose registers.",null,null],[13,"AH","","",20,null],[13,"CH","","",20,null],[13,"DH","","",20,null],[13,"BH","","",20,null],[4,"Rf","","10-byte floating point registers.",null,null],[13,"ST0","","",21,null],[13,"ST1","","",21,null],[13,"ST2","","",21,null],[13,"ST3","","",21,null],[13,"ST4","","",21,null],[13,"ST5","","",21,null],[13,"ST6","","",21,null],[13,"ST7","","",21,null],[4,"Rm","","8-byte MMX registers.",null,null],[13,"MMX0","","",22,null],[13,"MMX1","","",22,null],[13,"MMX2","","",22,null],[13,"MMX3","","",22,null],[13,"MMX4","","",22,null],[13,"MMX5","","",22,null],[13,"MMX6","","",22,null],[13,"MMX7","","",22,null],[4,"Rx","","16 or 32-byte SSE registers.",null,null],[13,"XMM0","","",23,null],[13,"XMM1","","",23,null],[13,"XMM2","","",23,null],[13,"XMM3","","",23,null],[13,"XMM4","","",23,null],[13,"XMM5","","",23,null],[13,"XMM6","","",23,null],[13,"XMM7","","",23,null],[4,"Rs","","2-byte segment registers.",null,null],[13,"ES","","",24,null],[13,"CS","","",24,null],[13,"SS","","",24,null],[13,"DS","","",24,null],[13,"FS","","",24,null],[13,"GS","","",24,null],[4,"RC","","4-byte control registers.",null,null],[13,"CR0","","",25,null],[13,"CR1","","",25,null],[13,"CR2","","",25,null],[13,"CR3","","",25,null],[13,"CR4","","",25,null],[13,"CR5","","",25,null],[13,"CR6","","",25,null],[13,"CR7","","",25,null],[4,"RD","","4-byte debug registers.",null,null],[13,"DR0","","",26,null],[13,"DR1","","",26,null],[13,"DR2","","",26,null],[13,"DR3","","",26,null],[13,"DR4","","",26,null],[13,"DR5","","",26,null],[13,"DR6","","",26,null],[13,"DR7","","",26,null],[13,"DR8","","",26,null],[13,"DR9","","",26,null],[13,"DR10","","",26,null],[13,"DR11","","",26,null],[13,"DR12","","",26,null],[13,"DR13","","",26,null],[13,"DR14","","",26,null],[13,"DR15","","",26,null],[4,"RB","","16-byte bound registers.",null,null],[13,"BND0","","",27,null],[13,"BND1","","",27,null],[13,"BND2","","",27,null],[13,"BND3","","",27,null],[6,"Assembler","","An x86 Assembler. This is aliased here for backwards…",null,null],[6,"AssemblyModifier","","An x86 AssemblyModifier. This is aliased here for…",null,null],[6,"UncommittedModifier","","An x86 UncommittedModifier. This is aliased here for…",null,null],[0,"aarch64","dynasmrt","Runtime support for the aarch64 architecture assembling…",null,null],[4,"Aarch64Relocation","dynasmrt::aarch64","Relocation implementation for the aarch64 architecture.",null,null],[13,"B","","",28,null],[13,"BCOND","","",28,null],[13,"ADR","","",28,null],[13,"ADRP","","",28,null],[13,"TBZ","","",28,null],[13,"Plain","","",28,null],[4,"RX","","4 or 8-byte general purpopse registers, where X31 is the…",null,null],[13,"X0","","",29,null],[13,"X1","","",29,null],[13,"X2","","",29,null],[13,"X3","","",29,null],[13,"X4","","",29,null],[13,"X5","","",29,null],[13,"X6","","",29,null],[13,"X7","","",29,null],[13,"X8","","",29,null],[13,"X9","","",29,null],[13,"X10","","",29,null],[13,"X11","","",29,null],[13,"X12","","",29,null],[13,"X13","","",29,null],[13,"X14","","",29,null],[13,"X15","","",29,null],[13,"X16","","",29,null],[13,"X17","","",29,null],[13,"X18","","",29,null],[13,"X19","","",29,null],[13,"X20","","",29,null],[13,"X21","","",29,null],[13,"X22","","",29,null],[13,"X23","","",29,null],[13,"X24","","",29,null],[13,"X25","","",29,null],[13,"X26","","",29,null],[13,"X27","","",29,null],[13,"X28","","",29,null],[13,"X29","","",29,null],[13,"X30","","",29,null],[13,"XZR","","",29,null],[4,"RXSP","","0x1F addresses both XZR and SP (disambiguated by context).…",null,null],[13,"X0","","",30,null],[13,"X1","","",30,null],[13,"X2","","",30,null],[13,"X3","","",30,null],[13,"X4","","",30,null],[13,"X5","","",30,null],[13,"X6","","",30,null],[13,"X7","","",30,null],[13,"X8","","",30,null],[13,"X9","","",30,null],[13,"X10","","",30,null],[13,"X11","","",30,null],[13,"X12","","",30,null],[13,"X13","","",30,null],[13,"X14","","",30,null],[13,"X15","","",30,null],[13,"X16","","",30,null],[13,"X17","","",30,null],[13,"X18","","",30,null],[13,"X19","","",30,null],[13,"X20","","",30,null],[13,"X21","","",30,null],[13,"X22","","",30,null],[13,"X23","","",30,null],[13,"X24","","",30,null],[13,"X25","","",30,null],[13,"X26","","",30,null],[13,"X27","","",30,null],[13,"X28","","",30,null],[13,"X29","","",30,null],[13,"X30","","",30,null],[13,"SP","","",30,null],[4,"RV","","1, 2, 4, 8 or 16-bytes scalar FP / vector SIMD registers. ",null,null],[13,"V0","","",31,null],[13,"V1","","",31,null],[13,"V2","","",31,null],[13,"V3","","",31,null],[13,"V4","","",31,null],[13,"V5","","",31,null],[13,"V6","","",31,null],[13,"V7","","",31,null],[13,"V8","","",31,null],[13,"V9","","",31,null],[13,"V10","","",31,null],[13,"V11","","",31,null],[13,"V12","","",31,null],[13,"V13","","",31,null],[13,"V14","","",31,null],[13,"V15","","",31,null],[13,"V16","","",31,null],[13,"V17","","",31,null],[13,"V18","","",31,null],[13,"V19","","",31,null],[13,"V20","","",31,null],[13,"V21","","",31,null],[13,"V22","","",31,null],[13,"V23","","",31,null],[13,"V24","","",31,null],[13,"V25","","",31,null],[13,"V26","","",31,null],[13,"V27","","",31,null],[13,"V28","","",31,null],[13,"V29","","",31,null],[13,"V30","","",31,null],[13,"V31","","",31,null],[5,"encode_logical_immediate_32bit","","Helper function for validating that a given value can be…",null,[[],["option",4]]],[5,"encode_logical_immediate_64bit","","Helper function for validating that a given value can be…",null,[[],["option",4]]],[5,"encode_floating_point_immediate","","Helper function for validating that a given value can be…",null,[[],["option",4]]],[6,"Assembler","","An aarch64 Assembler. This is aliased here for backwards…",null,null],[6,"AssemblyModifier","","An aarch64 AssemblyModifier. This is aliased here for…",null,null],[6,"UncommittedModifier","","An aarch64 UncommittedModifier. This is aliased here for…",null,null],[8,"DynasmApi","dynasmrt","This trait represents the interface that must be…",null,null],[10,"offset","","Report the current offset into the assembling target",32,[[],["assemblyoffset",3]]],[10,"push","","Push a byte into the assembling target",32,[[]]],[10,"align","","Push filler until the assembling target end is aligned to…",32,[[]]],[11,"push_i8","","Push a signed byte into the assembling target",32,[[]]],[11,"push_i16","","Push a signed word into the assembling target",32,[[]]],[11,"push_i32","","Push a signed doubleword into the assembling target",32,[[]]],[11,"push_i64","","Push a signed quadword into the assembling target",32,[[]]],[11,"push_u16","","Push an usigned word into the assembling target",32,[[]]],[11,"push_u32","","Push an usigned doubleword into the assembling target",32,[[]]],[11,"push_u64","","Push an usigned quadword into the assembling target",32,[[]]],[11,"runtime_error","","This function is called in when a runtime error has to be…",32,[[]]],[8,"DynasmLabelApi","","This trait extends DynasmApi to not only allow assembling,…",null,null],[16,"Relocation","","The relocation info type this assembler uses. ",33,null],[10,"local_label","","Record the definition of a local label",33,[[]]],[10,"global_label","","Record the definition of a global label",33,[[]]],[10,"dynamic_label","","Record the definition of a dynamic label",33,[[["dynamiclabel",3]]]],[11,"forward_reloc","","Record a relocation spot for a forward reference to a…",33,[[]]],[11,"backward_reloc","","Record a relocation spot for a backward reference to a…",33,[[]]],[11,"global_reloc","","Record a relocation spot for a reference to a global label",33,[[]]],[11,"dynamic_reloc","","Record a relocation spot for a reference to a dynamic label",33,[[["dynamiclabel",3]]]],[11,"bare_reloc","","Record a relocation spot to an arbitrary target.",33,[[]]],[10,"forward_relocation","","Equivalent of forward_reloc, but takes a non-encoded…",33,[[]]],[10,"backward_relocation","","Equivalent of backward_reloc, but takes a non-encoded…",33,[[]]],[10,"global_relocation","","Equivalent of global_reloc, but takes a non-encoded…",33,[[]]],[10,"dynamic_relocation","","Equivalent of dynamic_reloc, but takes a non-encoded…",33,[[["dynamiclabel",3]]]],[10,"bare_relocation","","Equivalent of bare_reloc, but takes a non-encoded relocation",33,[[]]],[8,"Register","","A trait abstracting over architectural register families.…",null,null],[10,"code","","Returns the integer ID of the register. Usually equivalent…",34,[[]]],[11,"get_id","","Get the internal ID of this dynamic label. This is only…",35,[[]]],[11,"lock","","Gain read-access to the internal `ExecutableBuffer`. While…",36,[[],[["rwlockreadguard",3],["executablebuffer",3]]]],[11,"new","","Creates a new `SimpleAssembler`, containing an empty `Vec`.",1,[[],["simpleassembler",3]]],[11,"alter","","Use an `UncommittedModifier` to alter uncommitted code.",1,[[],["uncommittedmodifier",3]]],[11,"finalize","","Destroys this assembler, returning the `Vec<u8>` contained…",1,[[],["vec",3]]],[11,"new","","Creates a new VecAssembler, with the specified base address.",37,[[],["vecassembler",3]]],[11,"commit","","Resolves any relocations emitted to the assembler before…",37,[[],[["result",4],["dynasmerror",4]]]],[11,"alter","","Use an `UncommittedModifier` to alter uncommitted code.…",37,[[],["uncommittedmodifier",3]]],[11,"finalize","","Finalizes the `VecAssembler`, returning the resulting…",37,[[],[["vec",3],["result",4],["dynasmerror",4]]]],[11,"new","","Create a new, empty assembler, with initial allocation…",38,[[],["result",6]]],[11,"new_dynamic_label","","Create a new dynamic label ID",38,[[],["dynamiclabel",3]]],[11,"alter_uncommitted","","Use an `UncommittedModifier` to alter uncommitted code.…",38,[[],["uncommittedmodifier",3]]],[11,"alter","","Use a `Modifier` to alter committed code directly. While…",38,[[],[["dynasmerror",4],["result",4]]]],[11,"commit","","Commit code, flushing the temporary internal assembling…",38,[[],[["result",4],["dynasmerror",4]]]],[11,"finalize","","Finalize this assembler, returning the internal…",38,[[],[["executablebuffer",3],["result",4]]]],[11,"reader","","Create an executor which can be used to execute code while…",38,[[],["executor",3]]],[11,"labels","","Provides access to the assemblers internal labels registry",38,[[],["labelregistry",3]]],[11,"labels_mut","","Provides mutable access to the assemblers internal labels…",38,[[],["labelregistry",3]]],[11,"goto","","Move the modifier cursor to the selected location.",39,[[["assemblyoffset",3]]]],[11,"check","","Check that the modifier cursor has not moved past the…",39,[[["assemblyoffset",3]],[["result",4],["dynasmerror",4]]]],[11,"check_exact","","Check that the modifier cursor is exactly at the specified…",39,[[["assemblyoffset",3]],[["result",4],["dynasmerror",4]]]],[11,"new","","create a new uncommittedmodifier",40,[[["vec",3],["assemblyoffset",3]],["uncommittedmodifier",3]]],[11,"goto","","Sets the current modification offset to the given value",40,[[["assemblyoffset",3]]]],[11,"check","","Checks that the current modification offset is not larger…",40,[[["assemblyoffset",3]],[["result",4],["dynasmerror",4]]]],[11,"check_exact","","Checks that the current modification offset is exactly the…",40,[[["assemblyoffset",3]],[["result",4],["dynasmerror",4]]]],[14,"Pointer","","This macro takes a *const pointer from the source operand,…",null,null],[14,"MutPointer","","Preforms the same action as the `Pointer!` macro, but…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","dynasmrt::mmap","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","dynasmrt::components","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","dynasmrt::relocations","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","dynasmrt::x64","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","dynasmrt::x86","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","dynasmrt::aarch64","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_encoding","dynasmrt::relocations","",14,[[]]],[11,"from_size","","",14,[[["relocationsize",4]]]],[11,"size","","",14,[[]]],[11,"write_value","","",14,[[],[["impossiblerelocation",3],["result",4]]]],[11,"read_value","","",14,[[]]],[11,"kind","","",14,[[],["relocationkind",4]]],[11,"page_size","","",14,[[]]],[11,"from_encoding","dynasmrt::x64","",42,[[]]],[11,"from_size","","",42,[[["relocationsize",4]]]],[11,"size","","",42,[[]]],[11,"write_value","","",42,[[],[["impossiblerelocation",3],["result",4]]]],[11,"read_value","","",42,[[]]],[11,"kind","","",42,[[],["relocationkind",4]]],[11,"page_size","","",42,[[]]],[11,"from_encoding","dynasmrt::x86","",43,[[]]],[11,"from_size","","",43,[[["relocationsize",4]]]],[11,"size","","",43,[[]]],[11,"write_value","","",43,[[],[["impossiblerelocation",3],["result",4]]]],[11,"read_value","","",43,[[]]],[11,"kind","","",43,[[],["relocationkind",4]]],[11,"page_size","","",43,[[]]],[11,"from_encoding","dynasmrt::aarch64","",28,[[]]],[11,"from_size","","",28,[[["relocationsize",4]]]],[11,"size","","",28,[[]]],[11,"write_value","","",28,[[],[["impossiblerelocation",3],["result",4]]]],[11,"read_value","","",28,[[]]],[11,"kind","","",28,[[],["relocationkind",4]]],[11,"page_size","","",28,[[]]],[11,"offset","dynasmrt","",1,[[],["assemblyoffset",3]]],[11,"push","","",1,[[]]],[11,"align","","",1,[[]]],[11,"offset","","",37,[[],["assemblyoffset",3]]],[11,"push","","",37,[[]]],[11,"align","","",37,[[]]],[11,"offset","","",38,[[],["assemblyoffset",3]]],[11,"push","","",38,[[]]],[11,"align","","",38,[[]]],[11,"offset","","",39,[[],["assemblyoffset",3]]],[11,"push","","",39,[[]]],[11,"align","","",39,[[]]],[11,"offset","","",40,[[],["assemblyoffset",3]]],[11,"push","","",40,[[]]],[11,"align","","",40,[[]]],[11,"local_label","","",37,[[]]],[11,"global_label","","",37,[[]]],[11,"dynamic_label","","",37,[[["dynamiclabel",3]]]],[11,"global_relocation","","",37,[[]]],[11,"dynamic_relocation","","",37,[[["dynamiclabel",3]]]],[11,"forward_relocation","","",37,[[]]],[11,"backward_relocation","","",37,[[]]],[11,"bare_relocation","","",37,[[]]],[11,"local_label","","",38,[[]]],[11,"global_label","","",38,[[]]],[11,"dynamic_label","","",38,[[["dynamiclabel",3]]]],[11,"global_relocation","","",38,[[]]],[11,"dynamic_relocation","","",38,[[["dynamiclabel",3]]]],[11,"forward_relocation","","",38,[[]]],[11,"backward_relocation","","",38,[[]]],[11,"bare_relocation","","",38,[[]]],[11,"local_label","","",39,[[]]],[11,"global_label","","",39,[[]]],[11,"dynamic_label","","",39,[[["dynamiclabel",3]]]],[11,"global_relocation","","",39,[[]]],[11,"dynamic_relocation","","",39,[[["dynamiclabel",3]]]],[11,"forward_relocation","","",39,[[]]],[11,"backward_relocation","","",39,[[]]],[11,"bare_relocation","","",39,[[]]],[11,"code","dynasmrt::x64","",16,[[]]],[11,"code","","",17,[[]]],[11,"code","","",18,[[]]],[11,"code","dynasmrt::x86","",19,[[]]],[11,"code","","",20,[[]]],[11,"code","","",21,[[]]],[11,"code","","",22,[[]]],[11,"code","","",23,[[]]],[11,"code","","",24,[[]]],[11,"code","","",25,[[]]],[11,"code","","",26,[[]]],[11,"code","","",27,[[]]],[11,"code","dynasmrt::aarch64","",29,[[]]],[11,"code","","",30,[[]]],[11,"code","","",31,[[]]],[11,"extend","dynasmrt","",1,[[]]],[11,"extend","","",1,[[]]],[11,"extend","","",37,[[]]],[11,"extend","","",37,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",39,[[]]],[11,"extend","","",39,[[]]],[11,"extend","","",40,[[]]],[11,"extend","","",40,[[]]],[11,"clone","dynasmrt::components","",9,[[],["labelregistry",3]]],[11,"clone","","",7,[[],["patchloc",3]]],[11,"clone","","",12,[[],["litpool",3]]],[11,"clone","dynasmrt::relocations","",13,[[],["relocationkind",4]]],[11,"clone","","",14,[[],["relocationsize",4]]],[11,"clone","dynasmrt::x64","",42,[[],["x64relocation",3]]],[11,"clone","","",16,[[],["rq",4]]],[11,"clone","","",17,[[],["rx",4]]],[11,"clone","","",18,[[],["rc",4]]],[11,"clone","dynasmrt::x86","",43,[[],["x86relocation",3]]],[11,"clone","","",19,[[],["rd",4]]],[11,"clone","","",20,[[],["rh",4]]],[11,"clone","","",21,[[],["rf",4]]],[11,"clone","","",22,[[],["rm",4]]],[11,"clone","","",23,[[],["rx",4]]],[11,"clone","","",24,[[],["rs",4]]],[11,"clone","","",25,[[],["rc",4]]],[11,"clone","","",26,[[],["rd",4]]],[11,"clone","","",27,[[],["rb",4]]],[11,"clone","dynasmrt::aarch64","",28,[[],["aarch64relocation",4]]],[11,"clone","","",29,[[],["rx",4]]],[11,"clone","","",30,[[],["rxsp",4]]],[11,"clone","","",31,[[],["rv",4]]],[11,"clone","dynasmrt","",0,[[],["assemblyoffset",3]]],[11,"clone","","",35,[[],["dynamiclabel",3]]],[11,"clone","","",36,[[],["executor",3]]],[11,"clone","","",2,[[],["labelkind",4]]],[11,"clone","","",3,[[],["targetkind",4]]],[11,"clone","","",4,[[],["dynasmerror",4]]],[11,"clone","","",1,[[],["simpleassembler",3]]],[11,"default","dynasmrt::mmap","",5,[[],["executablebuffer",3]]],[11,"default","","",6,[[],["mutablebuffer",3]]],[11,"default","dynasmrt::components","",9,[[],["labelregistry",3]]],[11,"default","","",10,[[],["relocregistry",3]]],[11,"default","","",11,[[],["managedrelocs",3]]],[11,"default","","",12,[[],["litpool",3]]],[11,"cmp","dynasmrt","",0,[[["assemblyoffset",3]],["ordering",4]]],[11,"eq","dynasmrt::relocations","",13,[[["relocationkind",4]]]],[11,"eq","","",14,[[["relocationsize",4]]]],[11,"eq","dynasmrt::x64","",16,[[["rq",4]]]],[11,"eq","","",17,[[["rx",4]]]],[11,"eq","","",18,[[["rc",4]]]],[11,"eq","dynasmrt::x86","",19,[[["rd",4]]]],[11,"eq","","",20,[[["rh",4]]]],[11,"eq","","",21,[[["rf",4]]]],[11,"eq","","",22,[[["rm",4]]]],[11,"eq","","",23,[[["rx",4]]]],[11,"eq","","",24,[[["rs",4]]]],[11,"eq","","",25,[[["rc",4]]]],[11,"eq","","",26,[[["rd",4]]]],[11,"eq","","",27,[[["rb",4]]]],[11,"eq","dynasmrt::aarch64","",29,[[["rx",4]]]],[11,"eq","","",30,[[["rxsp",4]]]],[11,"eq","","",31,[[["rv",4]]]],[11,"eq","dynasmrt","",0,[[["assemblyoffset",3]]]],[11,"ne","","",0,[[["assemblyoffset",3]]]],[11,"eq","","",35,[[["dynamiclabel",3]]]],[11,"ne","","",35,[[["dynamiclabel",3]]]],[11,"eq","","",2,[[["labelkind",4]]]],[11,"ne","","",2,[[["labelkind",4]]]],[11,"eq","","",3,[[["targetkind",4]]]],[11,"ne","","",3,[[["targetkind",4]]]],[11,"eq","","",4,[[["dynasmerror",4]]]],[11,"ne","","",4,[[["dynasmerror",4]]]],[11,"partial_cmp","","",0,[[["assemblyoffset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["assemblyoffset",3]]]],[11,"le","","",0,[[["assemblyoffset",3]]]],[11,"gt","","",0,[[["assemblyoffset",3]]]],[11,"ge","","",0,[[["assemblyoffset",3]]]],[11,"deref","dynasmrt::mmap","",5,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt::components","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt::relocations","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt::x64","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt::x86","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt::aarch64","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","dynasmrt","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","dynasmrt::relocations","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","dynasmrt::x64","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","dynasmrt::x86","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","dynasmrt::aarch64","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","dynasmrt","",0,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"description","","",4,[[]]]],"p":[[3,"AssemblyOffset"],[3,"SimpleAssembler"],[4,"LabelKind"],[4,"TargetKind"],[4,"DynasmError"],[3,"ExecutableBuffer"],[3,"MutableBuffer"],[3,"PatchLoc"],[3,"MemoryManager"],[3,"LabelRegistry"],[3,"RelocRegistry"],[3,"ManagedRelocs"],[3,"LitPool"],[4,"RelocationKind"],[4,"RelocationSize"],[8,"Relocation"],[4,"Rq"],[4,"Rx"],[4,"RC"],[4,"Rd"],[4,"Rh"],[4,"Rf"],[4,"Rm"],[4,"Rx"],[4,"Rs"],[4,"RC"],[4,"RD"],[4,"RB"],[4,"Aarch64Relocation"],[4,"RX"],[4,"RXSP"],[4,"RV"],[8,"DynasmApi"],[8,"DynasmLabelApi"],[8,"Register"],[3,"DynamicLabel"],[3,"Executor"],[3,"VecAssembler"],[3,"Assembler"],[3,"Modifier"],[3,"UncommittedModifier"],[3,"ImpossibleRelocation"],[3,"X64Relocation"],[3,"X86Relocation"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);// I'm sorry
var path = document.getElementsByClassName("logo-container")[0].childNodes[0].getAttribute("src");
var nest_count = (path.match(/\.\./g)||[]).length + 1; 

var base_path = "";
for (i = 0; i < nest_count; i++) {
    base_path += "../";
}

var sidebar = document.getElementsByClassName("sidebar")[0];

var node = document.createElement("div");
node.innerHTML = '\
  <p class="location">\
      <a href="' + base_path + 'language/index.html">dynasm-rs</a>\
  </p>\
  <div class = "block modules">\
    <h3>Components</h3>\
    <ul>\
      <li>\
        <a href="' + base_path + 'language/index.html">Syntax</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'plugin/dynasm/index.html">Plugin (dynasm)</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'runtime/dynasmrt/index.html">Runtime (dynasmrt)</a>\
      </li>\
    </ul>\
  </div>';

sidebar.insertBefore(node, sidebar.childNodes[2]);
