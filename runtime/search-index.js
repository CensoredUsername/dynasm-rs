var searchIndex = JSON.parse('{\
"dynasmrt":{"doc":"This crate provides runtime support for dynasm-rs. It …","t":[12,3,3,13,13,13,13,13,3,8,4,8,3,13,13,13,13,13,4,13,13,3,14,14,8,16,3,4,3,13,3,0,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,0,11,10,11,11,11,11,10,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,12,12,12,12,12,12,12,12,12,13,13,4,6,6,13,13,13,4,4,4,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,16,3,13,13,13,8,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,6,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,4,6,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,6,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,4,4,4,4,4,4,4,13,13,13,13,13,13,13,13,13,6,3,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Assembler","AssemblyOffset","Backward","CheckFailed","DuplicateLabel","Dynamic","Dynamic","DynamicLabel","DynasmApi","DynasmError","DynasmLabelApi","Executor","Extern","Forward","Global","Global","ImpossibleRelocation","LabelKind","Local","Managed","Modifier","MutPointer","Pointer","Register","Relocation","SimpleAssembler","TargetKind","UncommittedModifier","UnknownLabel","VecAssembler","aarch64","align","align","align","align","align","align","alter","alter","alter","alter_uncommitted","backward_reloc","backward_relocation","backward_relocation","backward_relocation","backward_relocation","bare_reloc","bare_relocation","bare_relocation","bare_relocation","bare_relocation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check_exact","check_exact","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","commit","commit","components","description","dynamic_label","dynamic_label","dynamic_label","dynamic_label","dynamic_reloc","dynamic_relocation","dynamic_relocation","dynamic_relocation","dynamic_relocation","dynasm","dynasm_backwards","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","finalize","finalize","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_reloc","forward_relocation","forward_relocation","forward_relocation","forward_relocation","from","from","from","from","from","from","from","from","from","from","from","get_id","global_label","global_label","global_label","global_label","global_reloc","global_relocation","global_relocation","global_relocation","global_relocation","goto","goto","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","labels","labels","labels_mut","labels_mut","local_label","local_label","local_label","local_label","lock","mmap","ne","ne","ne","ne","ne","new","new","new","new","new_dynamic_label","new_dynamic_label","offset","offset","offset","offset","offset","offset","ops","partial_cmp","push","push","push","push","push","push","push_i16","push_i32","push_i64","push_i8","push_u16","push_u32","push_u64","reader","relocations","runtime_error","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x64","x86","0","0","0","0","0","0","0","0","0","0","0","ADR","ADRP","Aarch64Relocation","Assembler","AssemblyModifier","B","BCOND","Plain","RV","RX","RXSP","SP","TBZ","UncommittedModifier","V0","V1","V10","V11","V12","V13","V14","V15","V16","V17","V18","V19","V2","V20","V21","V22","V23","V24","V25","V26","V27","V28","V29","V3","V30","V31","V4","V5","V6","V7","V8","V9","X0","X0","X1","X1","X10","X10","X11","X11","X12","X12","X13","X13","X14","X14","X15","X15","X16","X16","X17","X17","X18","X18","X19","X19","X2","X2","X20","X20","X21","X21","X22","X22","X23","X23","X24","X24","X25","X25","X26","X26","X27","X27","X28","X28","X29","X29","X3","X3","X30","X30","X4","X4","X5","X5","X6","X6","X7","X7","X8","X8","X9","X9","XZR","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","code","code","encode_floating_point_immediate","encode_logical_immediate_32bit","encode_logical_immediate_64bit","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_encoding","from_size","hash","hash","hash","into","into","into","into","kind","page_size","read_value","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_value","0","LabelRegistry","LitPool","ManagedRelocs","MemoryManager","PatchLoc","RelocRegistry","add","add_dynamic","add_global","add_local","adjust","align","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","commit","committed","default","default","default","default","define_dynamic","define_global","define_local","emit","execbuffer_addr","field_offset","finalize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","iter","location","needs_adjustment","new","new","new","new","new","new","new_dynamic_label","patch","push_backward","push_dynamic","push_forward","push_global","push_u16","push_u32","push_u64","push_u8","range","reader","ref_offset","relocation","remove_between","resolve_dynamic","resolve_global","resolve_local","take_dynamics","take_globals","take_locals","take_locals_named","target_offset","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","write","ExecutableBuffer","MutableBuffer","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","fmt","fmt","from","from","into","into","make_exec","make_mut","new","new","ptr","set_len","size","size","try_from","try_from","try_into","try_into","type_id","type_id","AbsToRel","Byte","DWord","Encoding","ImpossibleRelocation","QWord","RelToAbs","Relative","Relocation","RelocationKind","RelocationSize","Word","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","from","from","from","from_encoding","from_encoding","from_encoding","from_size","from_size","hash","hash","into","into","into","kind","kind","page_size","page_size","read_value","read_value","size","size","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_value","write_value","Assembler","AssemblyModifier","CR0","CR1","CR10","CR11","CR12","CR13","CR14","CR15","CR2","CR3","CR4","CR5","CR6","CR7","CR8","CR9","R10","R11","R12","R13","R14","R15","R8","R9","RAX","RBP","RBX","RC","RCX","RDI","RDX","RSI","RSP","Rq","Rx","UncommittedModifier","X64Relocation","XMM0","XMM1","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","XMM8","XMM9","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","code","code","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_encoding","from_size","hash","hash","hash","into","into","into","into","kind","page_size","read_value","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_value","AH","Assembler","AssemblyModifier","BH","BND0","BND1","BND2","BND3","CH","CR0","CR1","CR2","CR3","CR4","CR5","CR6","CR7","CS","DH","DR0","DR1","DR10","DR11","DR12","DR13","DR14","DR15","DR2","DR3","DR4","DR5","DR6","DR7","DR8","DR9","DS","EAX","EBP","EBX","ECX","EDI","EDX","ES","ESI","ESP","FS","GS","MMX0","MMX1","MMX2","MMX3","MMX4","MMX5","MMX6","MMX7","RB","RC","RD","Rd","Rf","Rh","Rm","Rs","Rx","SS","ST0","ST1","ST2","ST3","ST4","ST5","ST6","ST7","UncommittedModifier","X86Relocation","XMM0","XMM1","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","code","code","code","code","code","code","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_encoding","from_size","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","kind","page_size","read_value","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_value"],"q":["dynasmrtdynasmrt::DynasmError","","","dynasmrt::LabelKind","","","dynasmrt::TargetKind","","","","","dynasmrt::aarchdynasmrt::aarch64::Aarch64Relocation","dynasmrt::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::mmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::relocations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::x64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A full assembler implementation. Supports labels, all …","A struct representing an offset into the assembling buffer …","This targets a local label with the specified name that …","A check (like <code>Modifier::check</code> or <code>Modifier::check_exact</code>) …","A duplicate label dynamic/global label was defined","A dynamic label, like <code>=&gt;value:</code>","This targets the specified dynamic label.","A dynamic label","This trait represents the interface that must be …","The various error types generated by dynasm functions.","This trait extends DynasmApi to not only allow assembling, …","A read-only shared reference to the executable buffer …","This targets the specified address.","This targets a local label with the specified name that …","A global label, like <code>-&gt;label:</code>","This targets a global label with the specified name.","The user tried to declare a relocation too far away from …","A description of a label. Used for error reporting.","A local label, like <code>label:</code>","An already resolved relocation that needs to be adjusted …","Allows modification of already committed assembly code. …","Preforms the same action as the <code>Pointer!</code> macro, but casts …","This macro takes a *const pointer from the source operand, …","A trait abstracting over architectural register families. …","The relocation info type this assembler uses. ","An assembler that is purely a <code>Vec&lt;u8&gt;</code>. It doesn’t …","A description of a relocation target. Used for error …","This struct is a wrapper around an <code>Assembler</code> normally …","An unknown label","An assembler that assembles into a <code>Vec&lt;u8&gt;</code>, while …","Runtime support for the aarch64 architecture assembling …","Push filler until the assembling target end is aligned to …","","","","","","Use an <code>UncommittedModifier</code> to alter uncommitted code.","Use an <code>UncommittedModifier</code> to alter uncommitted code. This …","Use a <code>Modifier</code> to alter committed code directly. While …","Use an <code>UncommittedModifier</code> to alter uncommitted code. This …","Record a relocation spot for a backward reference to a …","Equivalent of backward_reloc, but takes a non-encoded …","","","","Record a relocation spot to an arbitrary target.","Equivalent of bare_reloc, but takes a non-encoded …","","","","","","","","","","","","","","","","","","","","","","","","","","Check that the modifier cursor has not moved past the …","Checks that the current modification offset is not larger …","Check that the modifier cursor is exactly at the specified …","Checks that the current modification offset is exactly the …","","","","","","","","","","","","","","","","Returns the integer ID of the register. Usually equivalent …","Resolves any relocations emitted to the assembler before …","Commit code, flushing the temporary internal assembling …","This module provides several reusable compoments for …","","Record the definition of a dynamic label","","","","Record a relocation spot for a reference to a dynamic label","Equivalent of dynamic_reloc, but takes a non-encoded …","","","","The whole point. This macro compiles given assembly/rust …","Similar to <code>dynasm!</code>, but the calls to the assembler are …","","","","","","","","","","","","","","","","Destroys this assembler, returning the <code>Vec&lt;u8&gt;</code> contained …","Finalizes the <code>VecAssembler</code>, returning the resulting <code>Vec&lt;u8&gt;</code>…","Finalize this assembler, returning the internal …","","","","","","","","","","","","","","","Record a relocation spot for a forward reference to a …","Equivalent of forward_reloc, but takes a non-encoded …","","","","","","","","","","","","","","","Get the internal ID of this dynamic label. This is only …","Record the definition of a global label","","","","Record a relocation spot for a reference to a global label","Equivalent of global_reloc, but takes a non-encoded …","","","","Move the modifier cursor to the selected location.","Sets the current modification offset to the given value","","","","","","","","","","","","","","","","Provides access to the assemblers internal labels registry","Provides access to the assemblers internal labels registry","Provides mutable access to the assemblers internal labels …","Provides mutable access to the assemblers internal labels …","Record the definition of a local label","","","","Gain read-access to the internal <code>ExecutableBuffer</code>. While …","This module implements some wrappers around Mmap/MmapMut …","","","","","","Creates a new <code>SimpleAssembler</code>, containing an empty <code>Vec</code>.","Creates a new VecAssembler, with the specified base …","Create a new, empty assembler, with initial allocation …","create a new uncommittedmodifier","Create a new dynamic label ID","Create a new dynamic label ID","Report the current offset into the assembling target","","","","","","The assembling buffer.","","Push a byte into the assembling target","","","","","","Push a signed word into the assembling target","Push a signed doubleword into the assembling target","Push a signed quadword into the assembling target","Push a signed byte into the assembling target","Push an usigned word into the assembling target","Push an usigned doubleword into the assembling target","Push an usigned quadword into the assembling target","Create an executor which can be used to execute code while …","This module defines the <code>Relocation</code> trait and several …","This function is called in when a runtime error has to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runtime support for the x64 architecture assembling target.","Runtime support for the x86 architecture assembling target.","","","","","","","","","","","","","","Relocation implementation for the aarch64 architecture.","An aarch64 Assembler. This is aliased here for backwards …","An aarch64 AssemblyModifier. This is aliased here for …","","","","1, 2, 4, 8 or 16-bytes scalar FP / vector SIMD registers. ","4 or 8-byte general purpopse registers, where X31 is the …","0x1F addresses both XZR and SP (disambiguated by context). …","","","An aarch64 UncommittedModifier. This is aliased here for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function for validating that a given value can be …","Helper function for validating that a given value can be …","Helper function for validating that a given value can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A registry of labels. Contains all necessessities for …","Literal pool implementation. One can programmatically push …","A registry of relocations that have been encoded …","This struct implements a protection-swapping assembling …","An abstraction of a relocation of type <code>R</code>, located at …","A registry of relocations and the respective labels they …","Add a relocation to this registry.","Add a new patch targetting the dynamic label <code>id</code>.","Add a new patch targetting the global label <code>name</code>.","Add a new patch targetting the next local label <code>name</code>. As …","Patch <code>buffer</code> so that this relocation will still point to …","Add extra alignment for the next value in the literal pool","Take all items from another registry and add them to this …","","","","","","","","","","","","","","","","","","","Commits the data from <code>new</code> into the managed memory, calling …","Returns the amount of bytes already committed to the …","","","","","Define a the dynamic label <code>id</code> to be located at <code>offset</code>.","Define a the global label <code>name</code> to be located at <code>offset</code>.","Define a the local label <code>name</code> to be located at <code>offset</code>.","Emit this literal pool into the specified assembler","Returns the current start address of the managed …","The offset, backwards, from location that the actual field …","finalizes the currently committed part of the buffer.","","","","","","","","","","","","","","","","","","","Iterate through all defined managed relocations.","The AssemblyOffset at which this relocation was emitted","Returns if this patch requires adjustment when the address …","Create a new memory manager, with <code>initial_mmap_size</code> data …","Create a new, empty label registry","create a new <code>PatchLoc</code>","Create a new, empty relocation registry.","Create a new, empty managed relocation registry.","Create a new, empty literal pool","Create a new dynamic label id","Patch <code>buffer</code> so that this relocation patch will point to …","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Returns a range that covers the entire relocation in its …","Create an atomically refcounted reference to the internal …","The offset, backwards, to be subtracted from location to …","The type of relocation to be emitted.","Remove all managed relocations whose byte fields start in …","Returns the offset at which the dynamic label <code>id</code> was …","Returns the offset at which the global label <code>name</code> was …","Returns the offset at which the last local label named <code>id</code> …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","A constant offset added to the destination address of this …","","","","","","","","","","","","","","","","","","","","","","Returns the actual value that should be inserted at the …","Borrow the internal memory buffer mutably","A structure holding a buffer of executable memory. It also …","ExecutableBuffer equivalent that holds a buffer of mutable …","","","","","","","","","","","","","","","","Change this mutable buffer into an executable buffer.","Change this executable buffer into a mutable buffer.","Create a new executable buffer, backed by a buffer of size …","Create a new mutable buffer, backed by a buffer of size …","Obtain a pointer into the executable memory from an offset …","Set the length of the usable part of this mutable buffer. …","Query the backing size of this executable buffer","Query the backing size of this mutable buffer","","","","","","","An absolute relocation to a relative address, i.e. trying …","A byte-sized relocation","A four-byte sized relocation","The encoded representation for this relocation that is …","Error returned when encoding a relocation failed","An 8-byte sized relocation","A relative relocation to an absolute address, i.e. trying …","A simple, PC-relative relocation. These can be encoded …","Used to inform assemblers on how to implement relocations …","Specifies what kind of relocation a relocation is.","A descriptor for the size of a relocation. This also …","A two-byte relocation","","","","","","","","","","","","","","","","","","","construct this relocation from an encoded representation.","Converts back from numeric value to RelocationKind","","construct this relocation from a simple size. This is used …","","","","","","","Specifies what kind of relocation this relocation instance …","","Specifies the default page size on this platform.","","Read a value from a buffer of size <code>self.size()</code> in the …","","The size of the slice of bytes affected by this relocation","","","","","","","","","","","","","Write a value into a buffer of size <code>self.size()</code> in the …","","An x64 Assembler. This is aliased here for backwards …","An x64 AssemblyModifier. This is aliased here for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","8-byte control registers.","","","","","","1, 2, 4 or 8-byte general purpose “quad-word” …","16 or 32-byte SSE registers.","An x64 UncommittedModifier. This is aliased here for …","Relocation implementation for the x64 architecture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An x86 Assembler. This is aliased here for backwards …","An x86 AssemblyModifier. This is aliased here for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","16-byte bound registers.","4-byte control registers.","4-byte debug registers.","1, 2 or 4-byte general purpose “double-word” registers.","10-byte floating point registers.","High-byte general purpose registers.","8-byte MMX registers.","2-byte segment registers.","16 or 32-byte SSE registers.","","","","","","","","","","An x86 UncommittedModifier. This is aliased here for …","Relocation implementation for the x86 architecture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,2,3,3,4,2,0,0,0,0,0,2,2,4,2,3,0,4,2,0,0,0,0,5,0,0,0,3,0,0,6,7,8,9,10,11,7,8,9,9,5,5,8,9,10,5,5,8,9,10,1,12,13,4,2,3,7,8,9,10,11,1,12,13,4,2,3,7,8,9,10,11,10,11,10,11,1,12,13,4,2,3,7,1,12,13,4,2,3,7,1,14,8,9,0,3,5,8,9,10,5,5,8,9,10,0,0,1,12,4,2,3,7,7,8,8,9,9,10,10,11,11,7,8,9,1,12,13,4,4,2,2,3,3,7,8,9,10,11,5,5,8,9,10,1,12,13,4,2,3,7,8,9,10,11,12,5,8,9,10,5,5,8,9,10,10,11,1,12,4,2,1,12,13,4,2,3,7,8,9,10,11,8,9,8,9,5,8,9,10,13,0,1,12,4,2,3,7,8,9,11,8,9,6,7,8,9,10,11,7,1,6,7,8,9,10,11,6,6,6,6,6,6,6,9,0,6,1,12,13,4,2,3,7,4,2,3,1,12,13,4,2,3,7,8,9,10,11,1,12,13,4,2,3,7,8,9,10,11,1,12,13,4,2,3,7,8,9,10,11,0,0,15,16,17,18,19,20,21,22,23,24,25,26,26,0,0,0,26,26,26,0,0,0,27,26,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,29,26,29,27,28,26,29,27,28,26,29,27,28,26,29,27,28,29,27,28,0,0,0,29,27,28,26,29,27,28,26,29,27,28,26,26,29,27,28,26,29,27,28,26,26,26,26,26,29,27,28,26,29,27,28,26,29,27,28,26,29,27,28,26,30,0,0,0,0,0,0,31,32,32,32,33,34,31,35,36,33,32,31,34,35,36,33,32,31,34,36,33,34,36,33,34,35,35,36,32,31,34,36,36,36,34,35,33,35,35,36,33,32,31,34,35,36,33,32,31,34,35,36,33,32,31,34,31,33,33,35,36,33,32,31,34,36,33,34,34,34,34,34,34,34,34,33,35,33,33,31,36,36,36,32,32,32,32,33,36,33,34,35,36,33,32,31,34,35,36,33,32,31,34,35,36,33,32,31,34,33,35,0,0,37,38,37,38,37,38,37,38,38,37,38,37,38,37,38,38,37,37,38,37,38,37,38,37,38,37,38,37,38,39,40,40,41,0,40,39,39,0,0,0,40,42,39,40,42,39,40,39,40,39,40,39,40,42,39,40,42,39,40,41,39,40,41,40,39,40,42,39,40,41,40,41,40,41,40,41,40,39,40,42,39,40,42,39,40,42,39,40,41,40,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,44,45,43,46,44,45,43,46,44,45,43,46,44,45,43,44,45,43,44,45,43,46,44,45,43,46,44,45,43,46,46,44,45,43,46,44,45,43,46,46,46,46,46,44,45,43,46,44,45,43,46,44,45,43,46,44,45,43,46,47,0,0,47,48,48,48,48,47,49,49,49,49,49,49,49,49,50,47,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,50,52,52,52,52,52,52,50,52,52,50,50,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,50,54,54,54,54,54,54,54,54,0,0,55,55,55,55,55,55,55,55,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,52,47,54,53,55,50,49,51,48,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,56,56,56,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56,52,47,54,53,55,50,49,51,48,56],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[],["uncommittedmodifier",3]],[[],["uncommittedmodifier",3]],[[],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[],["uncommittedmodifier",3]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[["usize",15],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["assemblyoffset",3]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[["assemblyoffset",3]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[["assemblyoffset",3]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[["assemblyoffset",3]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[],["assemblyoffset",3]],[[],["dynamiclabel",3]],[[],["executor",3]],[[],["labelkind",4]],[[],["targetkind",4]],[[],["dynasmerror",4]],[[],["simpleassembler",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["assemblyoffset",3]],["ordering",4]],[[],["u8",15]],[[],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[],[["result",4,["dynasmerror"]],["dynasmerror",4]]],null,[[],["str",15]],[[["dynamiclabel",3]]],[[["dynamiclabel",3]]],[[["dynamiclabel",3]]],[[["dynamiclabel",3]]],[[["u8",15],["dynamiclabel",3],["isize",15]]],[[["u8",15],["dynamiclabel",3],["isize",15]]],[[["u8",15],["dynamiclabel",3],["isize",15]]],[[["u8",15],["dynamiclabel",3],["isize",15]]],[[["u8",15],["dynamiclabel",3],["isize",15]]],null,null,[[["assemblyoffset",3]],["bool",15]],[[["dynamiclabel",3]],["bool",15]],[[["labelkind",4]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["dynasmerror",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["result",4,["vec","dynasmerror"]],["vec",3,["u8"]],["dynasmerror",4]]],[[],[["result",4,["executablebuffer"]],["executablebuffer",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["str",15],["u8",15],["isize",15]]],[[["assemblyoffset",3]]],[[["assemblyoffset",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["labelregistry",3]],[[],["labelregistry",3]],[[],["labelregistry",3]],[[],["labelregistry",3]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[],[["rwlockreadguard",3,["executablebuffer"]],["executablebuffer",3]]],null,[[["assemblyoffset",3]],["bool",15]],[[["dynamiclabel",3]],["bool",15]],[[["labelkind",4]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["dynasmerror",4]],["bool",15]],[[],["simpleassembler",3]],[[["usize",15]],["vecassembler",3]],[[],["result",6]],[[["assemblyoffset",3],["vec",3]],["uncommittedmodifier",3]],[[],["dynamiclabel",3]],[[],["dynamiclabel",3]],[[],["assemblyoffset",3]],[[],["assemblyoffset",3]],[[],["assemblyoffset",3]],[[],["assemblyoffset",3]],[[],["assemblyoffset",3]],[[],["assemblyoffset",3]],null,[[["assemblyoffset",3]],[["ordering",4],["option",4,["ordering"]]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["i16",15]]],[[["i32",15]]],[[["i64",15]]],[[["i8",15]]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[],["executor",3]],null,[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["aarch64relocation",4]],[[],["rx",4]],[[],["rxsp",4]],[[],["rv",4]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["f32",15]],[["option",4,["u8"]],["u8",15]]],[[["u32",15]],[["u16",15],["option",4,["u16"]]]],[[["u64",15]],[["u16",15],["option",4,["u16"]]]],[[["rx",4]],["bool",15]],[[["rxsp",4]],["bool",15]],[[["rv",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["relocationsize",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["relocationkind",4]],[[],["usize",15]],[[],["isize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],null,null,null,null,null,null,null,[[["patchloc",3]]],[[["patchloc",3],["dynamiclabel",3]]],[[["patchloc",3],["str",15]]],[[["patchloc",3],["str",15]]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],[[["usize",15],["u8",15]]],[[["managedrelocs",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["labelregistry",3]],[[],["patchloc",3]],[[],["litpool",3]],[[]],[[]],[[]],[[["vec",3]]],[[],["usize",15]],[[],["labelregistry",3]],[[],["relocregistry",3]],[[],["managedrelocs",3]],[[],["litpool",3]],[[["assemblyoffset",3],["dynamiclabel",3]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[["assemblyoffset",3],["str",15]],[["result",4,["dynasmerror"]],["dynasmerror",4]]],[[["assemblyoffset",3],["str",15]]],[[]],[[],["usize",15]],null,[[],[["result",4,["executablebuffer"]],["executablebuffer",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[["usize",15]],["result",6]],[[],["labelregistry",3]],[[["assemblyoffset",3],["u8",15],["isize",15]],["patchloc",3]],[[],["relocregistry",3]],[[]],[[]],[[],["dynamiclabel",3]],[[["usize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],[[["relocationsize",4],["str",15]],["isize",15]],[[["dynamiclabel",3],["relocationsize",4]],["isize",15]],[[["relocationsize",4],["str",15]],["isize",15]],[[["relocationsize",4],["str",15]],["isize",15]],[[["u16",15]],["isize",15]],[[["u32",15]],["isize",15]],[[["u64",15]],["isize",15]],[[["u8",15]],["isize",15]],[[["usize",15]],[["usize",15],["range",3,["usize"]]]],[[],[["rwlock",3,["executablebuffer"]],["arc",3,["rwlock"]]]],null,null,[[["usize",15]]],[[["dynamiclabel",3]],[["result",4,["assemblyoffset","dynasmerror"]],["assemblyoffset",3],["dynasmerror",4]]],[[["str",15]],[["result",4,["assemblyoffset","dynasmerror"]],["assemblyoffset",3],["dynasmerror",4]]],[[["str",15]],[["result",4,["assemblyoffset","dynasmerror"]],["assemblyoffset",3],["dynasmerror",4]]],[[]],[[]],[[]],[[["str",15]]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["isize",15]],[[],[["executablebuffer",3],["rwlockwriteguard",3,["executablebuffer"]]]],null,null,[[]],[[]],[[]],[[]],[[],["executablebuffer",3]],[[],["mutablebuffer",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],[["executablebuffer",3],["result",6,["executablebuffer"]]]],[[],[["result",6,["mutablebuffer"]],["mutablebuffer",3]]],[[["usize",15]],[["executablebuffer",3],["result",6,["executablebuffer"]]]],[[["usize",15]],[["result",6,["mutablebuffer"]],["mutablebuffer",3]]],[[["assemblyoffset",3]]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["relocationkind",4]],[[],["relocationsize",4]],[[]],[[]],[[["relocationkind",4]],["bool",15]],[[["relocationsize",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u8",15]]],[[]],[[["relocationsize",4]]],[[["relocationsize",4]]],[[]],[[]],[[]],[[]],[[]],[[],["relocationkind",4]],[[],["relocationkind",4]],[[],["usize",15]],[[],["usize",15]],[[],["isize",15]],[[],["isize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["x64relocation",3]],[[],["rq",4]],[[],["rx",4]],[[],["rc",4]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["rq",4]],["bool",15]],[[["rx",4]],["bool",15]],[[["rc",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["relocationsize",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["relocationkind",4]],[[],["usize",15]],[[],["isize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["x86relocation",3]],[[],["rd",4]],[[],["rh",4]],[[],["rf",4]],[[],["rm",4]],[[],["rx",4]],[[],["rs",4]],[[],["rc",4]],[[],["rd",4]],[[],["rb",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["rd",4]],["bool",15]],[[["rh",4]],["bool",15]],[[["rf",4]],["bool",15]],[[["rm",4]],["bool",15]],[[["rx",4]],["bool",15]],[[["rs",4]],["bool",15]],[[["rc",4]],["bool",15]],[[["rd",4]],["bool",15]],[[["rb",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["relocationsize",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["relocationkind",4]],[[],["usize",15]],[[],["isize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["isize",15]],[["result",4,["impossiblerelocation"]],["impossiblerelocation",3]]]],"p":[[3,"AssemblyOffset"],[4,"TargetKind"],[4,"DynasmError"],[4,"LabelKind"],[8,"DynasmLabelApi"],[8,"DynasmApi"],[3,"SimpleAssembler"],[3,"VecAssembler"],[3,"Assembler"],[3,"Modifier"],[3,"UncommittedModifier"],[3,"DynamicLabel"],[3,"Executor"],[8,"Register"],[13,"DuplicateLabel"],[13,"UnknownLabel"],[13,"ImpossibleRelocation"],[13,"Local"],[13,"Global"],[13,"Dynamic"],[13,"Forward"],[13,"Backward"],[13,"Global"],[13,"Dynamic"],[13,"Extern"],[4,"Aarch64Relocation"],[4,"RXSP"],[4,"RV"],[4,"RX"],[13,"Plain"],[3,"ManagedRelocs"],[3,"RelocRegistry"],[3,"PatchLoc"],[3,"LitPool"],[3,"MemoryManager"],[3,"LabelRegistry"],[3,"ExecutableBuffer"],[3,"MutableBuffer"],[4,"RelocationKind"],[4,"RelocationSize"],[8,"Relocation"],[3,"ImpossibleRelocation"],[4,"RC"],[4,"Rq"],[4,"Rx"],[3,"X64Relocation"],[4,"Rh"],[4,"RB"],[4,"RC"],[4,"Rs"],[4,"RD"],[4,"Rd"],[4,"Rm"],[4,"Rf"],[4,"Rx"],[3,"X86Relocation"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};// I'm sorry
var path = document.getElementsByClassName("logo-container")[0].childNodes[0].getAttribute("src");
var nest_count = (path.match(/\.\./g)||[]).length + 1; 

var base_path = "";
for (i = 0; i < nest_count; i++) {
    base_path += "../";
}

var sidebar = document.getElementsByClassName("sidebar")[0];

var node = document.createElement("div");
node.innerHTML = '\
  <p class="location">\
      <a href="' + base_path + 'language/index.html">dynasm-rs</a>\
  </p>\
  <div class = "block modules">\
    <h3>Components</h3>\
    <ul>\
      <li>\
        <a href="' + base_path + 'language/index.html">Syntax</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'plugin/dynasm/index.html">Plugin (dynasm)</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'runtime/dynasmrt/index.html">Runtime (dynasmrt)</a>\
      </li>\
    </ul>\
  </div>';

sidebar.insertBefore(node, sidebar.childNodes[2]);
