var N=null,E="",T="t",U="u",searchIndex={};
var R=["This targets a local label with the specified name that…","Global","Dynamic","executablebuffer","result","mutablebuffer","usize","dynasmrt","rwlock","dynamiclabel","assemblyoffset","dynasmerror","impossiblerelocation","patchloc","Return an iterator through all defined relocations…","Encode `value` into the literal pool.","Encode the relative address of a label into the literal…","relocationsize","ImpossibleRelocation","from_encoding","Assembler","UncommittedModifier","AssemblyModifier","Helper function for validating that a given value can be…","push_u16","push_u32","push_u64","Relocation","finalize","uncommittedmodifier","new_dynamic_label","Use an `UncommittedModifier` to alter uncommitted code.…","labelregistry","check_exact","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","to_string","dynasmrt::mmap","dynasmrt::components","dynasmrt::relocations","dynasmrt::x64","dynasmrt::x86","dynasmrt::aarch64","from_size","write_value","read_value","relocationkind","page_size","start_offset","field_offset","offset","local_label","global_label","dynamic_label","global_relocation","dynamic_relocation","forward_relocation","backward_relocation","bare_relocation","extend","default","relocregistry","managedrelocs","executor","simpleassembler","ordering","labelkind","targetkind","formatter","AssemblyOffset","SimpleAssembler","LabelKind","TargetKind","DynasmError","ExecutableBuffer","MutableBuffer","PatchLoc","MemoryManager","LabelRegistry","RelocRegistry","ManagedRelocs","RelocationKind","RelocationSize","Aarch64Relocation","DynasmApi","DynasmLabelApi","DynamicLabel","Executor","VecAssembler","Modifier","X64Relocation","X86Relocation"];

searchIndex["dynasmrt"]={"doc":"This crate provides runtime support for dynasm-rs. It…","i":[[3,R[75],R[7],"A struct representing an offset into the assembling buffer…",N,N],[12,"0",E,E,0,N],[3,R[92],E,"A dynamic label",N,N],[3,R[93],E,"A read-only shared reference to the executable buffer…",N,N],[3,R[76],E,"An assembler that is purely a `Vec<u8>`. It doesn't…",N,N],[12,"ops",E,"The assembling buffer.",1,N],[3,R[94],E,"An assembler that assembles into a `Vec<u8>`, while…",N,N],[3,R[20],E,"A full assembler implementation. Supports labels, all…",N,N],[3,R[95],E,"Allows modification of already committed assembly code.…",N,N],[3,R[21],E,"This struct is a wrapper around an `Assembler` normally…",N,N],[4,R[77],E,"A description of a label. Used for error reporting.",N,N],[13,"Local",E,"A local label, like `label:`",2,N],[13,R[1],E,"A global label, like `->label:`",2,N],[13,R[2],E,"A dynamic label, like `=>value:`",2,N],[4,R[78],E,"A description of a relocation target. Used for error…",N,N],[13,"Forward",E,R[0],3,N],[13,"Backward",E,R[0],3,N],[13,R[1],E,"This targets a global label with the specified name.",3,N],[13,R[2],E,"This targets the specified dynamic label.",3,N],[13,"Extern",E,"This targets the specified address.",3,N],[13,"Managed",E,"An already resolved relocation that needs to be adjusted…",3,N],[4,R[79],E,"The various error types generated by dynasm functions.",N,N],[13,"CheckFailed",E,"A check (like `Modifier::check` or…",4,N],[13,"DuplicateLabel",E,"A duplicate label dynamic/global label was defined",4,N],[13,"UnknownLabel",E,"An unknown label",4,N],[13,R[18],E,"The user tried to declare a relocation too far away from…",4,N],[0,"mmap",E,"This module implements some wrappers around Mmap/MmapMut…",N,N],[3,R[80],R[43],"A structure holding a buffer of executable memory. It also…",N,N],[3,R[81],E,"ExecutableBuffer equivalent that holds a buffer of mutable…",N,N],[11,"ptr",E,"Obtain a pointer into the executable memory from an offset…",5,[[["self"],[R[10]]]]],[11,"new",E,"Create a new executable buffer, backed by a buffer of size…",5,[[[R[6]]],[[R[3]],[R[4],[R[3]]]]]],[11,"size",E,"Query the backing size of this executable buffer",5,[[["self"]],[R[6]]]],[11,"make_mut",E,"Change this executable buffer into a mutable buffer.",5,[[],[[R[5]],[R[4],[R[5]]]]]],[11,"new",E,"Create a new mutable buffer, backed by a buffer of size…",6,[[[R[6]]],[[R[5]],[R[4],[R[5]]]]]],[11,"size",E,"Query the backing size of this mutable buffer",6,[[["self"]],[R[6]]]],[11,"set_len",E,"Set the length of the usable part of this mutable buffer.…",6,[[["self"],[R[6]]]]],[11,"make_exec",E,"Change this mutable buffer into an executable buffer.",6,[[],[[R[3]],[R[4],[R[3]]]]]],[0,"components",R[7],"This module provides several reusable compoments for…",N,N],[3,R[83],R[44],"This struct implements a protection-swapping assembling…",N,N],[3,R[84],E,"A registry of labels. Contains all necessessities for…",N,N],[3,R[82],E,"An abstraction of a relocation of type `R`, located at…",N,N],[12,"location",E,"The AssemblyOffset at which this relocation was emitted",7,N],[12,"relocation",E,"The type of relocation to be emitted, and any information…",7,N],[12,R[56],E,"A constant offset to be applied to this relocation when…",7,N],[3,R[85],E,"A registry of relocations and the respective labels they…",N,N],[3,R[86],E,"A registry of relocations that have been encoded…",N,N],[3,"LitPool",E,"Literal pool implementation. One can programmatically push…",N,N],[11,"new",E,"Create a new memory manager, with `initial_mmap_size` data…",8,[[[R[6]]],[R[4]]]],[11,"committed",E,"Returns the amount of bytes already committed to the manager",8,[[["self"]],[R[6]]]],[11,"execbuffer_addr",E,"Returns the current start address of the managed…",8,[[["self"]],[R[6]]]],[11,"commit",E,"Commits the data from `new` into the managed memory,…",8,[[["self"],["vec"],["f"]]]],[11,"write",E,"Borrow the internal memory buffer mutably",8,[[["self"]],[[R[3]],["rwlockwriteguard",[R[3]]]]]],[11,R[28],E,"finalizes the currently committed part of the buffer.",8,[[],[[R[4],[R[3]]],[R[3]]]]],[11,"reader",E,"Create an atomically refcounted reference to the internal…",8,[[["self"]],[[R[8],[R[3]]],["arc",[R[8]]]]]],[11,"new",E,"Create a new, empty label registry",9,[[],[R[32]]]],[11,R[30],E,"Create a new dynamic label id",9,[[["self"]],[R[9]]]],[11,"define_dynamic",E,"Define a the dynamic label `id` to be located at `offset`.",9,[[["self"],[R[9]],[R[10]]],[[R[11]],[R[4],[R[11]]]]]],[11,"define_global",E,"Define a the global label `name` to be located at `offset`.",9,[[["self"],[R[10]],["str"]],[[R[11]],[R[4],[R[11]]]]]],[11,"define_local",E,"Define a the local label `name` to be located at `offset`.",9,[[["self"],[R[10]],["str"]]]],[11,"resolve_dynamic",E,"Returns the offset at which the dynamic label `id` was…",9,[[["self"],[R[9]]],[[R[11]],[R[4],[R[10],R[11]]],[R[10]]]]],[11,"resolve_global",E,"Returns the offset at which the global label `name` was…",9,[[["self"],["str"]],[[R[11]],[R[4],[R[10],R[11]]],[R[10]]]]],[11,"resolve_local",E,"Returns the offset at which the last local label named…",9,[[["self"],["str"]],[[R[11]],[R[4],[R[10],R[11]]],[R[10]]]]],[11,"new",E,"create a new `PatchLoc`",7,[[["isize"],[R[10]],["r"]],[R[13]]]],[11,"patch",E,"Patch `buffer` so that this relocation patch will point to…",7,[[["self"],[R[6]]],[[R[4],[R[12]]],[R[12]]]]],[11,"adjust",E,"Patch `buffer` so that this relocation will still point to…",7,[[["self"],[R[6]],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[11,"needs_adjustment",E,"Returns if this patch requires adjustment when the address…",7,[[["self"]],["bool"]]],[11,"new",E,"Create a new, empty relocation registry.",10,[[],[R[67]]]],[11,"add_global",E,"Add a new patch targetting the global label `name`.",10,[[["self"],[R[13]],["str"]]]],[11,"add_dynamic",E,"Add a new patch targetting the dynamic label `id`.",10,[[["self"],[R[9]],[R[13]]]]],[11,"add_local",E,"Add a new patch targetting the next local label `name`. As…",10,[[["self"],[R[13]],["str"]]]],[11,"take_locals_named",E,R[14],10,[[["self"],["str"]]]],[11,"take_globals",E,R[14],10,[[["self"]]]],[11,"take_dynamics",E,R[14],10,[[["self"]]]],[11,"take_locals",E,R[14],10,[[["self"]]]],[11,"new",E,"Create a new, empty managed relocation registry.",11,[[],["self"]]],[11,"add",E,"Add a relocation to this registry.",11,[[["self"],[R[13]]]]],[11,"append",E,"Take all items from another registry and add them to this…",11,[[["self"],[R[68]]]]],[11,"remove_between",E,"Remove all managed relocations whose byte fields start in…",11,[[["self"],[R[6]]]]],[11,"iter",E,"Iterate through all defined managed relocations.",11,[[["self"]]]],[11,"new",E,"Create a new, empty literal pool",12,[[],["self"]]],[11,"align",E,"Add extra alignment for the next value in the literal pool",12,[[["self"],[R[6]],["u8"]]]],[11,"push_u8",E,R[15],12,[[["self"],["u8"]],["isize"]]],[11,R[24],E,R[15],12,[[["self"],["u16"]],["isize"]]],[11,R[25],E,R[15],12,[[["self"],["u32"]],["isize"]]],[11,R[26],E,R[15],12,[[["self"],["u64"]],["isize"]]],[11,"push_dynamic",E,R[16],12,[[["self"],[R[9]],[R[17]]],["isize"]]],[11,"push_global",E,R[16],12,[[["self"],[R[17]],["str"]],["isize"]]],[11,"push_forward",E,R[16],12,[[["self"],[R[17]],["str"]],["isize"]]],[11,"push_backward",E,R[16],12,[[["self"],[R[17]],["str"]],["isize"]]],[11,"emit",E,"Emit this literal pool into the specified assembler",12,[[["d"]]]],[0,"relocations",R[7],"This module defines the `Relocation` trait and several…",N,N],[3,R[18],R[45],"Error returned when encoding a relocation failed",N,N],[4,R[87],E,"Specifies what kind of relocation a relocation is.",N,N],[13,"Relative",E,"A simple, PC-relative relocation. These can be encoded…",13,N],[13,"AbsToRel",E,"An absolute relocation to a relative address, i.e. trying…",13,N],[13,"RelToAbs",E,"A relative relocation to an absolute address, i.e. trying…",13,N],[4,R[88],E,"A descriptor for the size of a relocation. This also…",N,N],[13,"Byte",E,"A byte-sized relocation",14,N],[13,"Word",E,"A two-byte relocation",14,N],[13,"DWord",E,"A four-byte sized relocation",14,N],[13,"QWord",E,"An 8-byte sized relocation",14,N],[8,R[27],E,"Used to inform assemblers on how to implement relocations…",N,N],[16,"Encoding",E,"The encoded representation for this relocation that is…",15,N],[10,R[19],E,"construct this relocation from an encoded representation.",15,[[],["self"]]],[10,R[49],E,"construct this relocation from a simple size. This is used…",15,[[[R[17]]],["self"]]],[11,R[54],E,"Returns the offset that this relocation is relative to,…",15,[[["self"]],[R[6]]]],[11,R[55],E,"Returns the offset of the start of the bytes containing…",15,[[["self"]],[R[6]]]],[10,"size",E,"The size of the slice of bytes affected by this relocation",15,[[["self"]],[R[6]]]],[10,R[50],E,"Write a value into a buffer of size `self.size()` in the…",15,[[["self"],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[10,R[51],E,"Read a value from a buffer of size `self.size()` in the…",15,[[["self"]],["isize"]]],[10,"kind",E,"Specifies what kind of relocation this relocation instance…",15,[[["self"]],[R[52]]]],[10,R[53],E,"Specifies the default page size on this platform.",15,[[],[R[6]]]],[11,R[19],E,"Converts back from numeric value to RelocationKind",13,[[["u8"]],["self"]]],[0,"x64",R[7],"This module implements the relocation model for the x64…",N,N],[3,R[96],R[46],"Relocation implementation for the x64 architecture.",N,N],[6,R[20],E,"An x64 Assembler. This is aliased here for backwards…",N,N],[6,R[22],E,"An x64 AssemblyModifier. This is aliased here for…",N,N],[6,R[21],E,"An x64 UncommittedModifier. This is aliased here for…",N,N],[0,"x86",R[7],"This module implements the relocation model for the x86…",N,N],[3,R[97],R[47],"Relocation implementation for the x86 architecture.",N,N],[6,R[20],E,"An x86 Assembler. This is aliased here for backwards…",N,N],[6,R[22],E,"An x86 AssemblyModifier. This is aliased here for…",N,N],[6,R[21],E,"An x86 UncommittedModifier. This is aliased here for…",N,N],[0,"aarch64",R[7],"This module implements the relocation model for the…",N,N],[4,R[89],R[48],"Relocation implementation for the aarch64 architecture.",N,N],[13,"B",E,E,16,N],[13,"BCOND",E,E,16,N],[13,"ADR",E,E,16,N],[13,"ADRP",E,E,16,N],[13,"TBZ",E,E,16,N],[13,"Plain",E,E,16,N],[5,"encode_logical_immediate_32bit",E,R[23],N,[[["u32"]],[["u16"],["option",["u16"]]]]],[5,"encode_logical_immediate_64bit",E,R[23],N,[[["u64"]],[["u16"],["option",["u16"]]]]],[5,"encode_floating_point_immediate",E,R[23],N,[[["f32"]],[["option",["u8"]],["u8"]]]],[6,R[20],E,"An aarch64 Assembler. This is aliased here for backwards…",N,N],[6,R[22],E,"An aarch64 AssemblyModifier. This is aliased here for…",N,N],[6,R[21],E,"An aarch64 UncommittedModifier. This is aliased here for…",N,N],[8,R[90],R[7],"This trait represents the interface that must be…",N,N],[10,R[56],E,"Report the current offset into the assembling target",17,[[["self"]],[R[10]]]],[10,"push",E,"Push a byte into the assembling target",17,[[["self"],["u8"]]]],[10,"align",E,"Push filler until the assembling target end is aligned to…",17,[[["self"],[R[6]],["u8"]]]],[11,"push_i8",E,"Push a signed byte into the assembling target",17,[[["self"],["i8"]]]],[11,"push_i16",E,"Push a signed word into the assembling target",17,[[["self"],["i16"]]]],[11,"push_i32",E,"Push a signed doubleword into the assembling target",17,[[["self"],["i32"]]]],[11,"push_i64",E,"Push a signed quadword into the assembling target",17,[[["self"],["i64"]]]],[11,R[24],E,"Push an usigned word into the assembling target",17,[[["self"],["u16"]]]],[11,R[25],E,"Push an usigned doubleword into the assembling target",17,[[["self"],["u32"]]]],[11,R[26],E,"Push an usigned quadword into the assembling target",17,[[["self"],["u64"]]]],[11,"runtime_error",E,"This function is called in when a runtime error has to be…",17,[[["self"],["str"]]]],[8,R[91],E,"This trait extends DynasmApi to not only allow assembling,…",N,N],[16,R[27],E,"The relocation info type this assembler uses. ",18,N],[10,R[57],E,"Record the definition of a local label",18,[[["self"],["str"]]]],[10,R[58],E,"Record the definition of a global label",18,[[["self"],["str"]]]],[10,R[59],E,"Record the definition of a dynamic label",18,[[["self"],[R[9]]]]],[11,"forward_reloc",E,"Record a relocation spot for a forward reference to a…",18,[[["self"],["isize"],["str"]]]],[11,"backward_reloc",E,"Record a relocation spot for a backward reference to a…",18,[[["self"],["isize"],["str"]]]],[11,"global_reloc",E,"Record a relocation spot for a reference to a global label",18,[[["self"],["isize"],["str"]]]],[11,"dynamic_reloc",E,"Record a relocation spot for a reference to a dynamic label",18,[[["self"],[R[9]],["isize"]]]],[11,"bare_reloc",E,"Record a relocation spot to an arbitrary target.",18,[[["self"],[R[6]]]]],[10,R[62],E,"Equivalent of forward_reloc, but takes a non-encoded…",18,[[["self"],["isize"],["str"]]]],[10,R[63],E,"Equivalent of backward_reloc, but takes a non-encoded…",18,[[["self"],["isize"],["str"]]]],[10,R[60],E,"Equivalent of global_reloc, but takes a non-encoded…",18,[[["self"],["isize"],["str"]]]],[10,R[61],E,"Equivalent of dynamic_reloc, but takes a non-encoded…",18,[[["self"],[R[9]],["isize"]]]],[10,R[64],E,"Equivalent of bare_reloc, but takes a non-encoded relocation",18,[[["self"],[R[6]]]]],[11,"get_id",E,"Get the internal ID of this dynamic label. This is only…",19,[[],[R[6]]]],[11,"lock",E,"Gain read-access to the internal `ExecutableBuffer`. While…",20,[[["self"]],[["rwlockreadguard",[R[3]]],[R[3]]]]],[11,"new",E,"Creates a new `SimpleAssembler`, containing an empty `Vec`.",1,[[],[R[70]]]],[11,"alter",E,"Use an `UncommittedModifier` to alter uncommitted code.",1,[[["self"]],[R[29]]]],[11,R[28],E,"Destroys this assembler, returning the `Vec<u8>` contained…",1,[[],[["u8"],["vec",["u8"]]]]],[11,"new",E,"Creates a new VecAssembler, with the specified base address.",21,[[[R[6]]],["vecassembler"]]],[11,"commit",E,"Resolves any relocations emitted to the assembler before…",21,[[["self"]],[[R[11]],[R[4],[R[11]]]]]],[11,"alter",E,R[31],21,[[["self"]],[R[29]]]],[11,R[28],E,"Finalizes the `VecAssembler`, returning the resulting…",21,[[],[["vec",["u8"]],[R[11]],[R[4],["vec",R[11]]]]]],[11,"new",E,"Create a new, empty assembler, with initial allocation…",22,[[],[R[4]]]],[11,R[30],E,"Create a new dynamic label ID",22,[[["self"]],[R[9]]]],[11,"alter_uncommitted",E,R[31],22,[[["self"]],[R[29]]]],[11,"alter",E,"Use a `Modifier` to alter committed code directly. While…",22,[[["self"],["f"]],[[R[11]],[R[4],[R[11]]]]]],[11,"commit",E,"Commit code, flushing the temporary internal assembling…",22,[[["self"]],[[R[11]],[R[4],[R[11]]]]]],[11,R[28],E,"Finalize this assembler, returning the internal…",22,[[],[[R[4],[R[3]]],[R[3]]]]],[11,"reader",E,"Create an executor which can be used to execute code while…",22,[[["self"]],[R[69]]]],[11,"labels",E,"Provides access to the assemblers internal labels registry",22,[[["self"]],[R[32]]]],[11,"labels_mut",E,"Provides mutable access to the assemblers internal labels…",22,[[["self"]],[R[32]]]],[11,"goto",E,"Move the modifier cursor to the selected location.",23,[[["self"],[R[10]]]]],[11,"check",E,"Check that the modifier cursor has not moved past the…",23,[[["self"],[R[10]]],[[R[11]],[R[4],[R[11]]]]]],[11,R[33],E,"Check that the modifier cursor is exactly at the specified…",23,[[["self"],[R[10]]],[[R[11]],[R[4],[R[11]]]]]],[11,"new",E,"create a new uncommittedmodifier",24,[[["vec"],[R[10]]],[R[29]]]],[11,"goto",E,"Sets the current modification offset to the given value",24,[[["self"],[R[10]]]]],[11,"check",E,"Checks that the current modification offset is not larger…",24,[[["self"],[R[10]]],[[R[11]],[R[4],[R[11]]]]]],[11,R[33],E,"Checks that the current modification offset is exactly the…",24,[[["self"],[R[10]]],[[R[11]],[R[4],[R[11]]]]]],[14,"Pointer",E,"This macro takes a *const pointer from the source operand,…",N,N],[14,"MutPointer",E,"Preforms the same action as the `Pointer!` macro, but…",N,N],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[35],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[36],E,E,0,[[[U]],[R[4]]]],[11,R[37],E,E,0,[[],[R[4]]]],[11,R[40],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[T]]],[11,R[39],E,E,0,[[["self"]],[R[41]]]],[11,R[34],E,E,19,[[["self"]],[T]]],[11,R[35],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[36],E,E,19,[[[U]],[R[4]]]],[11,R[37],E,E,19,[[],[R[4]]]],[11,R[40],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[T]]],[11,R[39],E,E,19,[[["self"]],[R[41]]]],[11,R[34],E,E,20,[[["self"]],[T]]],[11,R[35],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[36],E,E,20,[[[U]],[R[4]]]],[11,R[37],E,E,20,[[],[R[4]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[T]]],[11,R[39],E,E,20,[[["self"]],[R[41]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[35],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[36],E,E,1,[[[U]],[R[4]]]],[11,R[37],E,E,1,[[],[R[4]]]],[11,R[40],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[T]]],[11,R[39],E,E,1,[[["self"]],[R[41]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[36],E,E,21,[[[U]],[R[4]]]],[11,R[37],E,E,21,[[],[R[4]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[T]]],[11,R[39],E,E,21,[[["self"]],[R[41]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[36],E,E,22,[[[U]],[R[4]]]],[11,R[37],E,E,22,[[],[R[4]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[T]]],[11,R[39],E,E,22,[[["self"]],[R[41]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[36],E,E,23,[[[U]],[R[4]]]],[11,R[37],E,E,23,[[],[R[4]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[T]]],[11,R[39],E,E,23,[[["self"]],[R[41]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[36],E,E,24,[[[U]],[R[4]]]],[11,R[37],E,E,24,[[],[R[4]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[T]]],[11,R[39],E,E,24,[[["self"]],[R[41]]]],[11,R[42],E,E,2,[[["self"]],["string"]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[36],E,E,2,[[[U]],[R[4]]]],[11,R[37],E,E,2,[[],[R[4]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[T]]],[11,R[39],E,E,2,[[["self"]],[R[41]]]],[11,R[42],E,E,3,[[["self"]],["string"]]],[11,R[34],E,E,3,[[["self"]],[T]]],[11,R[35],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[36],E,E,3,[[[U]],[R[4]]]],[11,R[37],E,E,3,[[],[R[4]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[T]]],[11,R[39],E,E,3,[[["self"]],[R[41]]]],[11,R[42],E,E,4,[[["self"]],["string"]]],[11,R[34],E,E,4,[[["self"]],[T]]],[11,R[35],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[36],E,E,4,[[[U]],[R[4]]]],[11,R[37],E,E,4,[[],[R[4]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[T]]],[11,R[39],E,E,4,[[["self"]],[R[41]]]],[11,"into",R[43],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[36],E,E,5,[[[U]],[R[4]]]],[11,R[37],E,E,5,[[],[R[4]]]],[11,R[40],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[T]]],[11,R[39],E,E,5,[[["self"]],[R[41]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[36],E,E,6,[[[U]],[R[4]]]],[11,R[37],E,E,6,[[],[R[4]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[T]]],[11,R[39],E,E,6,[[["self"]],[R[41]]]],[11,"into",R[44],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[36],E,E,8,[[[U]],[R[4]]]],[11,R[37],E,E,8,[[],[R[4]]]],[11,R[40],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[T]]],[11,R[39],E,E,8,[[["self"]],[R[41]]]],[11,R[34],E,E,9,[[["self"]],[T]]],[11,R[35],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[36],E,E,9,[[[U]],[R[4]]]],[11,R[37],E,E,9,[[],[R[4]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[T]]],[11,R[39],E,E,9,[[["self"]],[R[41]]]],[11,R[34],E,E,7,[[["self"]],[T]]],[11,R[35],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[36],E,E,7,[[[U]],[R[4]]]],[11,R[37],E,E,7,[[],[R[4]]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[T]]],[11,R[39],E,E,7,[[["self"]],[R[41]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[36],E,E,10,[[[U]],[R[4]]]],[11,R[37],E,E,10,[[],[R[4]]]],[11,R[40],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[T]]],[11,R[39],E,E,10,[[["self"]],[R[41]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[36],E,E,11,[[[U]],[R[4]]]],[11,R[37],E,E,11,[[],[R[4]]]],[11,R[40],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[T]]],[11,R[39],E,E,11,[[["self"]],[R[41]]]],[11,R[34],E,E,12,[[["self"]],[T]]],[11,R[35],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[36],E,E,12,[[[U]],[R[4]]]],[11,R[37],E,E,12,[[],[R[4]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[T]]],[11,R[39],E,E,12,[[["self"]],[R[41]]]],[11,"into",R[45],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[36],E,E,25,[[[U]],[R[4]]]],[11,R[37],E,E,25,[[],[R[4]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[T]]],[11,R[39],E,E,25,[[["self"]],[R[41]]]],[11,R[34],E,E,13,[[["self"]],[T]]],[11,R[35],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[36],E,E,13,[[[U]],[R[4]]]],[11,R[37],E,E,13,[[],[R[4]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[T]]],[11,R[39],E,E,13,[[["self"]],[R[41]]]],[11,R[34],E,E,14,[[["self"]],[T]]],[11,R[35],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[36],E,E,14,[[[U]],[R[4]]]],[11,R[37],E,E,14,[[],[R[4]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[T]]],[11,R[39],E,E,14,[[["self"]],[R[41]]]],[11,R[34],R[46],E,26,[[["self"]],[T]]],[11,R[35],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[36],E,E,26,[[[U]],[R[4]]]],[11,R[37],E,E,26,[[],[R[4]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"]],[T]]],[11,R[39],E,E,26,[[["self"]],[R[41]]]],[11,R[34],R[47],E,27,[[["self"]],[T]]],[11,R[35],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[36],E,E,27,[[[U]],[R[4]]]],[11,R[37],E,E,27,[[],[R[4]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"]],[T]]],[11,R[39],E,E,27,[[["self"]],[R[41]]]],[11,R[34],R[48],E,16,[[["self"]],[T]]],[11,R[35],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[36],E,E,16,[[[U]],[R[4]]]],[11,R[37],E,E,16,[[],[R[4]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[T]]],[11,R[39],E,E,16,[[["self"]],[R[41]]]],[11,R[19],R[45],E,14,[[],["self"]]],[11,R[49],E,E,14,[[[R[17]]],["self"]]],[11,"size",E,E,14,[[["self"]],[R[6]]]],[11,R[50],E,E,14,[[["self"],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[11,R[51],E,E,14,[[["self"]],["isize"]]],[11,"kind",E,E,14,[[["self"]],[R[52]]]],[11,R[53],E,E,14,[[],[R[6]]]],[11,R[19],R[46],E,26,[[],["self"]]],[11,R[49],E,E,26,[[[R[17]]],["self"]]],[11,R[54],E,E,26,[[["self"]],[R[6]]]],[11,R[55],E,E,26,[[["self"]],[R[6]]]],[11,"size",E,E,26,[[["self"]],[R[6]]]],[11,R[50],E,E,26,[[["self"],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[11,R[51],E,E,26,[[["self"]],["isize"]]],[11,"kind",E,E,26,[[["self"]],[R[52]]]],[11,R[53],E,E,26,[[],[R[6]]]],[11,R[19],R[47],E,27,[[],["self"]]],[11,R[49],E,E,27,[[[R[17]]],["self"]]],[11,R[54],E,E,27,[[["self"]],[R[6]]]],[11,R[55],E,E,27,[[["self"]],[R[6]]]],[11,"size",E,E,27,[[["self"]],[R[6]]]],[11,R[50],E,E,27,[[["self"],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[11,R[51],E,E,27,[[["self"]],["isize"]]],[11,"kind",E,E,27,[[["self"]],[R[52]]]],[11,R[53],E,E,27,[[],[R[6]]]],[11,R[19],R[48],E,16,[[],["self"]]],[11,R[49],E,E,16,[[[R[17]]],["self"]]],[11,"size",E,E,16,[[["self"]],[R[6]]]],[11,R[50],E,E,16,[[["self"],["isize"]],[[R[4],[R[12]]],[R[12]]]]],[11,R[51],E,E,16,[[["self"]],["isize"]]],[11,"kind",E,E,16,[[["self"]],[R[52]]]],[11,R[53],E,E,16,[[],[R[6]]]],[11,R[56],R[7],E,1,[[["self"]],[R[10]]]],[11,"push",E,E,1,[[["self"],["u8"]]]],[11,"align",E,E,1,[[["self"],[R[6]],["u8"]]]],[11,R[56],E,E,21,[[["self"]],[R[10]]]],[11,"push",E,E,21,[[["self"],["u8"]]]],[11,"align",E,E,21,[[["self"],[R[6]],["u8"]]]],[11,R[56],E,E,22,[[["self"]],[R[10]]]],[11,"push",E,E,22,[[["self"],["u8"]]]],[11,"align",E,E,22,[[["self"],[R[6]],["u8"]]]],[11,R[56],E,E,23,[[["self"]],[R[10]]]],[11,"push",E,E,23,[[["self"],["u8"]]]],[11,"align",E,E,23,[[["self"],[R[6]],["u8"]]]],[11,R[56],E,E,24,[[["self"]],[R[10]]]],[11,"push",E,E,24,[[["self"],["u8"]]]],[11,"align",E,E,24,[[["self"],[R[6]],["u8"]]]],[11,R[57],E,E,21,[[["self"],["str"]]]],[11,R[58],E,E,21,[[["self"],["str"]]]],[11,R[59],E,E,21,[[["self"],[R[9]]]]],[11,R[60],E,E,21,[[["self"],["r"],["isize"],["str"]]]],[11,R[61],E,E,21,[[["self"],[R[9]],["isize"],["r"]]]],[11,R[62],E,E,21,[[["self"],["r"],["isize"],["str"]]]],[11,R[63],E,E,21,[[["self"],["r"],["isize"],["str"]]]],[11,R[64],E,E,21,[[["self"],[R[6]],["r"]]]],[11,R[57],E,E,22,[[["self"],["str"]]]],[11,R[58],E,E,22,[[["self"],["str"]]]],[11,R[59],E,E,22,[[["self"],[R[9]]]]],[11,R[60],E,E,22,[[["self"],["r"],["isize"],["str"]]]],[11,R[61],E,E,22,[[["self"],[R[9]],["isize"],["r"]]]],[11,R[62],E,E,22,[[["self"],["r"],["isize"],["str"]]]],[11,R[63],E,E,22,[[["self"],["r"],["isize"],["str"]]]],[11,R[64],E,E,22,[[["self"],[R[6]],["r"]]]],[11,R[57],E,E,23,[[["self"],["str"]]]],[11,R[58],E,E,23,[[["self"],["str"]]]],[11,R[59],E,E,23,[[["self"],[R[9]]]]],[11,R[60],E,E,23,[[["self"],["r"],["isize"],["str"]]]],[11,R[61],E,E,23,[[["self"],[R[9]],["isize"],["r"]]]],[11,R[62],E,E,23,[[["self"],["r"],["isize"],["str"]]]],[11,R[63],E,E,23,[[["self"],["r"],["isize"],["str"]]]],[11,R[64],E,E,23,[[["self"],[R[6]],["r"]]]],[11,R[65],E,E,1,[[["self"],[T]]]],[11,R[65],E,E,1,[[["self"],[T]]]],[11,R[65],E,E,21,[[["self"],[T]]]],[11,R[65],E,E,21,[[["self"],[T]]]],[11,R[65],E,E,22,[[["self"],[T]]]],[11,R[65],E,E,22,[[["self"],[T]]]],[11,R[65],E,E,23,[[["self"],[T]]]],[11,R[65],E,E,23,[[["self"],[T]]]],[11,R[65],E,E,24,[[["self"],[T]]]],[11,R[65],E,E,24,[[["self"],[T]]]],[11,R[66],R[43],E,5,[[],[R[3]]]],[11,R[66],E,E,6,[[],[R[5]]]],[11,R[66],R[44],E,9,[[],[R[32]]]],[11,R[66],E,E,10,[[],[R[67]]]],[11,R[66],E,E,11,[[],[R[68]]]],[11,R[66],E,E,12,[[],["litpool"]]],[11,"clone",E,E,9,[[["self"]],[R[32]]]],[11,"clone",E,E,7,[[["self"]],[R[13]]]],[11,"clone",E,E,12,[[["self"]],["litpool"]]],[11,"clone",R[45],E,13,[[["self"]],[R[52]]]],[11,"clone",E,E,14,[[["self"]],[R[17]]]],[11,"clone",R[46],E,26,[[["self"]],["x64relocation"]]],[11,"clone",R[47],E,27,[[["self"]],["x86relocation"]]],[11,"clone",R[48],E,16,[[["self"]],["aarch64relocation"]]],[11,"clone",R[7],E,0,[[["self"]],[R[10]]]],[11,"clone",E,E,19,[[["self"]],[R[9]]]],[11,"clone",E,E,20,[[["self"]],[R[69]]]],[11,"clone",E,E,2,[[["self"]],[R[72]]]],[11,"clone",E,E,3,[[["self"]],[R[73]]]],[11,"clone",E,E,4,[[["self"]],[R[11]]]],[11,"clone",E,E,1,[[["self"]],[R[70]]]],[11,"partial_cmp",E,E,0,[[["self"],[R[10]]],[[R[71]],["option",[R[71]]]]]],[11,"lt",E,E,0,[[["self"],[R[10]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[10]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[10]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[10]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[10]]],[R[71]]]],[11,"eq",R[45],E,13,[[["self"],[R[52]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[17]]],["bool"]]],[11,"eq",R[7],E,0,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[9]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[9]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[72]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[72]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[73]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[73]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[11]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[11]]],["bool"]]],[11,"deref",R[43],E,5,[[["self"]]]],[11,"deref",E,E,6,[[["self"]]]],[11,"hash",R[45],E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",R[7],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"deref_mut",R[43],E,6,[[["self"]]]],[11,"fmt",E,E,5,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[44],E,8,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,9,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,10,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,12,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[45],E,25,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,13,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,14,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[46],E,26,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[47],E,27,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[48],E,16,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",R[7],E,0,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,19,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,20,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,21,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,23,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,24,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[74]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[74]]],[R[4]]]],[11,"description",E,E,4,[[["self"]],["str"]]]],"p":[[3,R[75]],[3,R[76]],[4,R[77]],[4,R[78]],[4,R[79]],[3,R[80]],[3,R[81]],[3,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[3,R[86]],[3,"LitPool"],[4,R[87]],[4,R[88]],[8,R[27]],[4,R[89]],[8,R[90]],[8,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[20]],[3,R[95]],[3,R[21]],[3,R[18]],[3,R[96]],[3,R[97]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);// I'm sorry
var path = document.getElementsByClassName("logo-container")[0].childNodes[0].getAttribute("src");
var nest_count = (path.match(/\.\./g)||[]).length + 1; 

var base_path = "";
for (i = 0; i < nest_count; i++) {
    base_path += "../";
}

var sidebar = document.getElementsByClassName("sidebar")[0];

var node = document.createElement("div");
node.innerHTML = '\
  <p class="location">\
      <a href="' + base_path + 'language/index.html">dynasm-rs</a>\
  </p>\
  <div class = "block modules">\
    <h3>Components</h3>\
    <ul>\
      <li>\
        <a href="' + base_path + 'language/index.html">Syntax</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'plugin/dynasm/index.html">Plugin (dynasm)</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'runtime/dynasmrt/index.html">Runtime (dynasmrt)</a>\
      </li>\
    </ul>\
  </div>';

sidebar.insertBefore(node, sidebar.childNodes[2]);
