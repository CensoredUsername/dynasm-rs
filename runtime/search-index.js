var searchIndex = JSON.parse('{\
"dynasmrt":{"doc":"This crate provides runtime support for dynasm-rs. It …","t":[0,3,3,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,12,12,12,12,12,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,0,3,8,16,10,10,10,10,10,10,10,4,13,13,13,11,4,13,13,13,13,0,3,6,6,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,3,6,6,6,4,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,0,4,13,13,13,13,13,13,6,6,6,5,5,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,3,12,3,11,3,11,4,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,8,10,10,10,11,11,11,11,11,11,11,11,8,16,10,10,10,11,11,11,11,11,10,10,10,10,10,3,12,11,11,11,3,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,3,11,11,11,11,8,10,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["mmap","ExecutableBuffer","MutableBuffer","ptr","new","size","make_mut","new","size","set_len","make_exec","components","MemoryManager","new","committed","execbuffer_addr","commit","write","finalize","reader","LabelRegistry","new","new_dynamic_label","define_dynamic","define_global","define_local","resolve_dynamic","resolve_global","resolve_local","PatchLoc","location","field_offset","ref_offset","relocation","target_offset","new","range","value","patch","adjust","needs_adjustment","RelocRegistry","new","add_global","add_dynamic","add_local","take_locals_named","take_globals","take_dynamics","take_locals","ManagedRelocs","new","add","append","remove_between","iter","LitPool","new","align","push_u8","push_u16","push_u32","push_u64","push_dynamic","push_global","push_forward","push_backward","emit","relocations","ImpossibleRelocation","Relocation","Encoding","from_encoding","from_size","size","write_value","read_value","kind","page_size","RelocationKind","Relative","AbsToRel","RelToAbs","from_encoding","RelocationSize","Byte","Word","DWord","QWord","x64","X64Relocation","Assembler","AssemblyModifier","UncommittedModifier","Rq","RAX","RCX","RDX","RBX","RSP","RBP","RSI","RDI","R8","R9","R10","R11","R12","R13","R14","R15","Rx","XMM0","XMM1","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","XMM8","XMM9","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","RC","CR0","CR1","CR2","CR3","CR4","CR5","CR6","CR7","CR8","CR9","CR10","CR11","CR12","CR13","CR14","CR15","x86","X86Relocation","Assembler","AssemblyModifier","UncommittedModifier","Rd","EAX","ECX","EDX","EBX","ESP","EBP","ESI","EDI","Rh","AH","CH","DH","BH","Rf","ST0","ST1","ST2","ST3","ST4","ST5","ST6","ST7","Rm","MMX0","MMX1","MMX2","MMX3","MMX4","MMX5","MMX6","MMX7","Rx","XMM0","XMM1","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","Rs","ES","CS","SS","DS","FS","GS","RC","CR0","CR1","CR2","CR3","CR4","CR5","CR6","CR7","RD","DR0","DR1","DR2","DR3","DR4","DR5","DR6","DR7","DR8","DR9","DR10","DR11","DR12","DR13","DR14","DR15","RB","BND0","BND1","BND2","BND3","aarch64","Aarch64Relocation","B","BCOND","ADR","ADRP","TBZ","Plain","Assembler","AssemblyModifier","UncommittedModifier","encode_logical_immediate_32bit","encode_logical_immediate_64bit","encode_floating_point_immediate","RX","X0","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X11","X12","X13","X14","X15","X16","X17","X18","X19","X20","X21","X22","X23","X24","X25","X26","X27","X28","X29","X30","XZR","RXSP","X0","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X11","X12","X13","X14","X15","X16","X17","X18","X19","X20","X21","X22","X23","X24","X25","X26","X27","X28","X29","X30","SP","RV","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","V15","V16","V17","V18","V19","V20","V21","V22","V23","V24","V25","V26","V27","V28","V29","V30","V31","dynasm","dynasm_backwards","AssemblyOffset","0","DynamicLabel","get_id","Executor","lock","LabelKind","Local","Global","Dynamic","TargetKind","Forward","Backward","Global","Dynamic","Extern","Managed","DynasmError","CheckFailed","DuplicateLabel","UnknownLabel","ImpossibleRelocation","DynasmApi","offset","push","align","push_i8","push_i16","push_i32","push_i64","push_u16","push_u32","push_u64","runtime_error","DynasmLabelApi","Relocation","local_label","global_label","dynamic_label","forward_reloc","backward_reloc","global_reloc","dynamic_reloc","bare_reloc","forward_relocation","backward_relocation","global_relocation","dynamic_relocation","bare_relocation","SimpleAssembler","ops","new","alter","finalize","VecAssembler","new","new_dynamic_label","commit","alter","labels","labels_mut","finalize","Assembler","new","new_dynamic_label","alter_uncommitted","alter","commit","finalize","reader","labels","labels_mut","Modifier","goto","check","check_exact","UncommittedModifier","new","goto","check","check_exact","Register","code","Pointer","MutPointer","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_encoding","from_size","size","write_value","read_value","kind","page_size","from_encoding","from_size","size","write_value","read_value","kind","page_size","from_encoding","from_size","size","write_value","read_value","kind","page_size","from_encoding","from_size","size","write_value","read_value","kind","page_size","offset","push","align","offset","push","align","offset","push","align","offset","push","align","offset","push","align","local_label","global_label","dynamic_label","global_relocation","dynamic_relocation","forward_relocation","backward_relocation","bare_relocation","local_label","global_label","dynamic_label","global_relocation","dynamic_relocation","forward_relocation","backward_relocation","bare_relocation","local_label","global_label","dynamic_label","global_relocation","dynamic_relocation","forward_relocation","backward_relocation","bare_relocation","code","code","code","code","code","code","code","code","code","code","code","code","code","code","code","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","deref","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","description"],"q":["dynasmrt","dynasmrt::mmap","","","","","","","","","","dynasmrt","dynasmrt::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt","dynasmrt::relocations","","","","","","","","","","","","","","","","","","","","dynasmrt","dynasmrt::x64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt","dynasmrt::x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt","dynasmrt::aarch64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::mmap","","","","","","","","","","","","","","dynasmrt::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::relocations","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::x64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::aarch64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::relocations","","","","","","","dynasmrt::x64","","","","","","","dynasmrt::x86","","","","","","","dynasmrt::aarch64","","","","","","","dynasmrt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dynasmrt::x64","","","dynasmrt::x86","","","","","","","","","dynasmrt::aarch64","","","dynasmrt","","","","","","","","","","dynasmrt::components","","","dynasmrt::relocations","","dynasmrt::x64","","","","dynasmrt::x86","","","","","","","","","","dynasmrt::aarch64","","","","dynasmrt","","","","","","","dynasmrt::mmap","","dynasmrt::components","","","","dynasmrt","dynasmrt::relocations","","dynasmrt::x64","","","dynasmrt::x86","","","","","","","","","dynasmrt::aarch64","","","dynasmrt","","","","","","","","","","","dynasmrt::mmap","","","","","dynasmrt::components","","","","","","dynasmrt::relocations","","","dynasmrt::x64","","","","dynasmrt::x86","","","","","","","","","","dynasmrt::aarch64","","","","dynasmrt","","","","","","","","","","","","","","dynasmrt::relocations","","dynasmrt::x64","","","dynasmrt::x86","","","","","","","","","dynasmrt::aarch64","","","dynasmrt","","","",""],"d":["This module implements some wrappers around Mmap/MmapMut …","A structure holding a buffer of executable memory. It …","ExecutableBuffer equivalent that holds a buffer of …","Obtain a pointer into the executable memory from an …","Create a new executable buffer, backed by a buffer of …","Query the backing size of this executable buffer","Change this executable buffer into a mutable buffer.","Create a new mutable buffer, backed by a buffer of size …","Query the backing size of this mutable buffer","Set the length of the usable part of this mutable buffer. …","Change this mutable buffer into an executable buffer.","This module provides several reusable compoments for …","This struct implements a protection-swapping assembling …","Create a new memory manager, with <code>initial_mmap_size</code> data …","Returns the amount of bytes already committed to the …","Returns the current start address of the managed …","Commits the data from <code>new</code> into the managed memory, …","Borrow the internal memory buffer mutably","finalizes the currently committed part of the buffer.","Create an atomically refcounted reference to the internal …","A registry of labels. Contains all necessessities for …","Create a new, empty label registry","Create a new dynamic label id","Define a the dynamic label <code>id</code> to be located at <code>offset</code>.","Define a the global label <code>name</code> to be located at <code>offset</code>.","Define a the local label <code>name</code> to be located at <code>offset</code>.","Returns the offset at which the dynamic label <code>id</code> was …","Returns the offset at which the global label <code>name</code> was …","Returns the offset at which the last local label named <code>id</code> …","An abstraction of a relocation of type <code>R</code>, located at …","The AssemblyOffset at which this relocation was emitted","The offset, backwards, from location that the actual …","The offset, backwards, to be subtracted from location to …","The type of relocation to be emitted.","A constant offset added to the destination address of …","create a new <code>PatchLoc</code>","Returns a range that covers the entire relocation in its …","Returns the actual value that should be inserted at the …","Patch <code>buffer</code> so that this relocation patch will point to …","Patch <code>buffer</code> so that this relocation will still point to …","Returns if this patch requires adjustment when the …","A registry of relocations and the respective labels they …","Create a new, empty relocation registry.","Add a new patch targetting the global label <code>name</code>.","Add a new patch targetting the dynamic label <code>id</code>.","Add a new patch targetting the next local label <code>name</code>. As …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","Return an iterator through all defined relocations …","A registry of relocations that have been encoded …","Create a new, empty managed relocation registry.","Add a relocation to this registry.","Take all items from another registry and add them to this …","Remove all managed relocations whose byte fields start in …","Iterate through all defined managed relocations.","Literal pool implementation. One can programmatically …","Create a new, empty literal pool","Add extra alignment for the next value in the literal pool","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Encode <code>value</code> into the literal pool.","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Encode the relative address of a label into the literal …","Emit this literal pool into the specified assembler","This module defines the <code>Relocation</code> trait and several …","Error returned when encoding a relocation failed","Used to inform assemblers on how to implement relocations …","The encoded representation for this relocation that is …","construct this relocation from an encoded representation.","construct this relocation from a simple size. This is …","The size of the slice of bytes affected by this relocation","Write a value into a buffer of size <code>self.size()</code> in the …","Read a value from a buffer of size <code>self.size()</code> in the …","Specifies what kind of relocation this relocation …","Specifies the default page size on this platform.","Specifies what kind of relocation a relocation is.","A simple, PC-relative relocation. These can be encoded …","An absolute relocation to a relative address, i.e. trying …","A relative relocation to an absolute address, i.e. trying …","Converts back from numeric value to RelocationKind","A descriptor for the size of a relocation. This also …","A byte-sized relocation","A two-byte relocation","A four-byte sized relocation","An 8-byte sized relocation","Runtime support for the x64 architecture assembling …","Relocation implementation for the x64 architecture.","An x64 Assembler. This is aliased here for backwards …","An x64 AssemblyModifier. This is aliased here for …","An x64 UncommittedModifier. This is aliased here for …","1, 2, 4 or 8-byte general purpose “quad-word” …","","","","","","","","","","","","","","","","","16 or 32-byte SSE registers.","","","","","","","","","","","","","","","","","8-byte control registers.","","","","","","","","","","","","","","","","","Runtime support for the x86 architecture assembling …","Relocation implementation for the x86 architecture.","An x86 Assembler. This is aliased here for backwards …","An x86 AssemblyModifier. This is aliased here for …","An x86 UncommittedModifier. This is aliased here for …","1, 2 or 4-byte general purpose “double-word” …","","","","","","","","","High-byte general purpose registers.","","","","","10-byte floating point registers.","","","","","","","","","8-byte MMX registers.","","","","","","","","","16 or 32-byte SSE registers.","","","","","","","","","2-byte segment registers.","","","","","","","4-byte control registers.","","","","","","","","","4-byte debug registers.","","","","","","","","","","","","","","","","","16-byte bound registers.","","","","","Runtime support for the aarch64 architecture assembling …","Relocation implementation for the aarch64 architecture.","","","","","","","An aarch64 Assembler. This is aliased here for backwards …","An aarch64 AssemblyModifier. This is aliased here for …","An aarch64 UncommittedModifier. This is aliased here for …","Helper function for validating that a given value can be …","Helper function for validating that a given value can be …","Helper function for validating that a given value can be …","4 or 8-byte general purpopse registers, where X31 is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0x1F addresses both XZR and SP (disambiguated by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","1, 2, 4, 8 or 16-bytes scalar FP / vector SIMD registers. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The whole point. This macro compiles given assembly/rust …","Similar to <code>dynasm!</code>, but the calls to the assembler are …","A struct representing an offset into the assembling …","","A dynamic label","Get the internal ID of this dynamic label. This is only …","A read-only shared reference to the executable buffer …","Gain read-access to the internal <code>ExecutableBuffer</code>. While …","A description of a label. Used for error reporting.","A local label, like <code>label:</code>","A global label, like <code>->label:</code>","A dynamic label, like <code>=>value:</code>","A description of a relocation target. Used for error …","This targets a local label with the specified name that …","This targets a local label with the specified name that …","This targets a global label with the specified name.","This targets the specified dynamic label.","This targets the specified address.","An already resolved relocation that needs to be adjusted …","The various error types generated by dynasm functions.","A check (like <code>Modifier::check</code> or <code>Modifier::check_exact</code>) …","A duplicate label dynamic/global label was defined","An unknown label","The user tried to declare a relocation too far away from …","This trait represents the interface that must be …","Report the current offset into the assembling target","Push a byte into the assembling target","Push filler until the assembling target end is aligned to …","Push a signed byte into the assembling target","Push a signed word into the assembling target","Push a signed doubleword into the assembling target","Push a signed quadword into the assembling target","Push an usigned word into the assembling target","Push an usigned doubleword into the assembling target","Push an usigned quadword into the assembling target","This function is called in when a runtime error has to be …","This trait extends DynasmApi to not only allow …","The relocation info type this assembler uses. ","Record the definition of a local label","Record the definition of a global label","Record the definition of a dynamic label","Record a relocation spot for a forward reference to a …","Record a relocation spot for a backward reference to a …","Record a relocation spot for a reference to a global label","Record a relocation spot for a reference to a dynamic …","Record a relocation spot to an arbitrary target.","Equivalent of forward_reloc, but takes a non-encoded …","Equivalent of backward_reloc, but takes a non-encoded …","Equivalent of global_reloc, but takes a non-encoded …","Equivalent of dynamic_reloc, but takes a non-encoded …","Equivalent of bare_reloc, but takes a non-encoded …","An assembler that is purely a <code>Vec<u8></code>. It doesn’t …","The assembling buffer.","Creates a new <code>SimpleAssembler</code>, containing an empty <code>Vec</code>.","Use an <code>UncommittedModifier</code> to alter uncommitted code.","Destroys this assembler, returning the <code>Vec<u8></code> contained …","An assembler that assembles into a <code>Vec<u8></code>, while …","Creates a new VecAssembler, with the specified base …","Create a new dynamic label ID","Resolves any relocations emitted to the assembler before …","Use an <code>UncommittedModifier</code> to alter uncommitted code. …","Provides access to the assemblers internal labels registry","Provides mutable access to the assemblers internal labels …","Finalizes the <code>VecAssembler</code>, returning the resulting …","A full assembler implementation. Supports labels, all …","Create a new, empty assembler, with initial allocation …","Create a new dynamic label ID","Use an <code>UncommittedModifier</code> to alter uncommitted code. …","Use a <code>Modifier</code> to alter committed code directly. While …","Commit code, flushing the temporary internal assembling …","Finalize this assembler, returning the internal …","Create an executor which can be used to execute code …","Provides access to the assemblers internal labels registry","Provides mutable access to the assemblers internal labels …","Allows modification of already committed assembly code. …","Move the modifier cursor to the selected location.","Check that the modifier cursor has not moved past the …","Check that the modifier cursor is exactly at the …","This struct is a wrapper around an <code>Assembler</code> normally …","create a new uncommittedmodifier","Sets the current modification offset to the given value","Checks that the current modification offset is not larger …","Checks that the current modification offset is exactly …","A trait abstracting over architectural register families. …","Returns the integer ID of the register. Usually …","This macro takes a *const pointer from the source …","Preforms the same action as the <code>Pointer!</code> macro, but casts …i":[0,0,0,1,1,1,1,2,2,2,2,0,0,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,0,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,0,0,0,9,9,9,9,9,9,9,9,0,10,10,10,10,0,11,11,11,11,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,16,16,16,16,0,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,0,0,24,24,24,24,24,24,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,28,0,29,0,30,0,31,31,31,0,32,32,32,32,32,32,0,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,0,37,37,37,37,37,37,37,0,38,38,38,38,38,38,38,38,38,0,39,39,39,0,40,40,40,40,0,41,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,42,42,42,42,42,42,42,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,43,43,43,43,43,43,43,43,43,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,44,44,44,44,44,44,44,44,44,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,11,11,11,11,11,11,11,43,43,43,43,43,43,43,44,44,44,44,44,44,44,24,24,24,24,24,24,24,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,36,36,37,37,38,38,39,39,40,40,4,5,8,10,11,43,12,13,14,44,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,1,2,4,6,7,8,28,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,28,29,29,31,31,32,32,33,33,28,1,2,2,1,2,3,4,5,6,7,8,42,10,11,43,12,13,14,44,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,31,32,33,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,31,32,33],"f":[null,null,null,[[["assemblyoffset",3]]],[[["usize",15]],[["executablebuffer",3],["result",6]]],[[],["usize",15]],[[],[["result",6],["mutablebuffer",3]]],[[["usize",15]],[["result",6],["mutablebuffer",3]]],[[],["usize",15]],[[["usize",15]]],[[],[["executablebuffer",3],["result",6]]],null,null,[[["usize",15]],["result",6]],[[],["usize",15]],[[],["usize",15]],[[["vec",3]]],[[],[["executablebuffer",3],["rwlockwriteguard",3]]],[[],[["result",4],["executablebuffer",3]]],[[],[["arc",3],["rwlock",3]]],null,[[],["labelregistry",3]],[[],["dynamiclabel",3]],[[["assemblyoffset",3],["dynamiclabel",3]],[["dynasmerror",4],["result",4]]],[[["assemblyoffset",3],["str",15]],[["dynasmerror",4],["result",4]]],[[["assemblyoffset",3],["str",15]]],[[["dynamiclabel",3]],[["assemblyoffset",3],["dynasmerror",4],["result",4]]],[[["str",15]],[["assemblyoffset",3],["dynasmerror",4],["result",4]]],[[["str",15]],[["assemblyoffset",3],["dynasmerror",4],["result",4]]],null,null,null,null,null,null,[[["assemblyoffset",3],["isize",15],["u8",15]],["patchloc",3]],[[["usize",15]],[["usize",15],["range",3]]],[[["usize",15]],["isize",15]],[[["usize",15]],[["result",4],["impossiblerelocation",3]]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["bool",15]],null,[[],["relocregistry",3]],[[["str",15],["patchloc",3]]],[[["dynamiclabel",3],["patchloc",3]]],[[["str",15],["patchloc",3]]],[[["str",15]]],[[]],[[]],[[]],null,[[]],[[["patchloc",3]]],[[["managedrelocs",3]]],[[["usize",15]]],[[]],null,[[]],[[["usize",15],["u8",15]]],[[["u8",15]],["isize",15]],[[["u16",15]],["isize",15]],[[["u32",15]],["isize",15]],[[["u64",15]],["isize",15]],[[["dynamiclabel",3],["relocationsize",4]],["isize",15]],[[["str",15],["relocationsize",4]],["isize",15]],[[["str",15],["relocationsize",4]],["isize",15]],[[["str",15],["relocationsize",4]],["isize",15]],[[]],null,null,null,null,[[]],[[["relocationsize",4]]],[[],["usize",15]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["isize",15]],[[],["relocationkind",4]],[[],["usize",15]],null,null,null,null,[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],[["option",4],["u16",15]]],[[["u64",15]],[["option",4],["u16",15]]],[[["f32",15]],[["option",4],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],null,[[],[["rwlockreadguard",3],["executablebuffer",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[["i8",15]]],[[["i16",15]]],[[["i32",15]]],[[["i64",15]]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["str",15]]],null,null,[[["str",15]]],[[["str",15]]],[[["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["dynamiclabel",3]]],[[["usize",15],["u8",15]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["dynamiclabel",3]]],[[["usize",15],["u8",15]]],null,null,[[],["simpleassembler",3]],[[],["uncommittedmodifier",3]],[[],[["vec",3],["u8",15]]],null,[[["usize",15]],["vecassembler",3]],[[],["dynamiclabel",3]],[[],[["dynasmerror",4],["result",4]]],[[],["uncommittedmodifier",3]],[[],["labelregistry",3]],[[],["labelregistry",3]],[[],[["result",4],["vec",3],["dynasmerror",4]]],null,[[],["result",6]],[[],["dynamiclabel",3]],[[],["uncommittedmodifier",3]],[[],[["dynasmerror",4],["result",4]]],[[],[["dynasmerror",4],["result",4]]],[[],[["result",4],["executablebuffer",3]]],[[],["executor",3]],[[],["labelregistry",3]],[[],["labelregistry",3]],null,[[["assemblyoffset",3]]],[[["assemblyoffset",3]],[["dynasmerror",4],["result",4]]],[[["assemblyoffset",3]],[["dynasmerror",4],["result",4]]],null,[[["assemblyoffset",3],["vec",3]],["uncommittedmodifier",3]],[[["assemblyoffset",3]]],[[["assemblyoffset",3]],[["dynasmerror",4],["result",4]]],[[["assemblyoffset",3]],[["dynasmerror",4],["result",4]]],null,[[],["u8",15]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["relocationsize",4]]],[[],["usize",15]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["isize",15]],[[],["relocationkind",4]],[[],["usize",15]],[[]],[[["relocationsize",4]]],[[],["usize",15]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["isize",15]],[[],["relocationkind",4]],[[],["usize",15]],[[]],[[["relocationsize",4]]],[[],["usize",15]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["isize",15]],[[],["relocationkind",4]],[[],["usize",15]],[[]],[[["relocationsize",4]]],[[],["usize",15]],[[["isize",15]],[["result",4],["impossiblerelocation",3]]],[[],["isize",15]],[[],["relocationkind",4]],[[],["usize",15]],[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[],["assemblyoffset",3]],[[["u8",15]]],[[["usize",15],["u8",15]]],[[["str",15]]],[[["str",15]]],[[["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["usize",15],["u8",15]]],[[["str",15]]],[[["str",15]]],[[["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["usize",15],["u8",15]]],[[["str",15]]],[[["str",15]]],[[["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["dynamiclabel",3]]],[[["isize",15],["u8",15],["str",15]]],[[["isize",15],["u8",15],["str",15]]],[[["usize",15],["u8",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["labelregistry",3]],[[],["patchloc",3]],[[],["litpool",3]],[[],["relocationkind",4]],[[],["relocationsize",4]],[[],["x64relocation",3]],[[],["rq",4]],[[],["rx",4]],[[],["rc",4]],[[],["x86relocation",3]],[[],["rd",4]],[[],["rh",4]],[[],["rf",4]],[[],["rm",4]],[[],["rx",4]],[[],["rs",4]],[[],["rc",4]],[[],["rd",4]],[[],["rb",4]],[[],["aarch64relocation",4]],[[],["rx",4]],[[],["rxsp",4]],[[],["rv",4]],[[],["assemblyoffset",3]],[[],["dynamiclabel",3]],[[],["executor",3]],[[],["labelkind",4]],[[],["targetkind",4]],[[],["dynasmerror",4]],[[],["simpleassembler",3]],[[],["executablebuffer",3]],[[],["mutablebuffer",3]],[[],["labelregistry",3]],[[],["relocregistry",3]],[[],["managedrelocs",3]],[[],["litpool",3]],[[["assemblyoffset",3]],["ordering",4]],[[["relocationkind",4]],["bool",15]],[[["relocationsize",4]],["bool",15]],[[["rq",4]],["bool",15]],[[["rx",4]],["bool",15]],[[["rc",4]],["bool",15]],[[["rd",4]],["bool",15]],[[["rh",4]],["bool",15]],[[["rf",4]],["bool",15]],[[["rm",4]],["bool",15]],[[["rx",4]],["bool",15]],[[["rs",4]],["bool",15]],[[["rc",4]],["bool",15]],[[["rd",4]],["bool",15]],[[["rb",4]],["bool",15]],[[["rx",4]],["bool",15]],[[["rxsp",4]],["bool",15]],[[["rv",4]],["bool",15]],[[["assemblyoffset",3]],["bool",15]],[[["assemblyoffset",3]],["bool",15]],[[["dynamiclabel",3]],["bool",15]],[[["dynamiclabel",3]],["bool",15]],[[["labelkind",4]],["bool",15]],[[["labelkind",4]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["targetkind",4]],["bool",15]],[[["dynasmerror",4]],["bool",15]],[[["dynasmerror",4]],["bool",15]],[[["assemblyoffset",3]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]]],"p":[[3,"ExecutableBuffer"],[3,"MutableBuffer"],[3,"MemoryManager"],[3,"LabelRegistry"],[3,"PatchLoc"],[3,"RelocRegistry"],[3,"ManagedRelocs"],[3,"LitPool"],[8,"Relocation"],[4,"RelocationKind"],[4,"RelocationSize"],[4,"Rq"],[4,"Rx"],[4,"RC"],[4,"Rd"],[4,"Rh"],[4,"Rf"],[4,"Rm"],[4,"Rx"],[4,"Rs"],[4,"RC"],[4,"RD"],[4,"RB"],[4,"Aarch64Relocation"],[4,"RX"],[4,"RXSP"],[4,"RV"],[3,"AssemblyOffset"],[3,"DynamicLabel"],[3,"Executor"],[4,"LabelKind"],[4,"TargetKind"],[4,"DynasmError"],[8,"DynasmApi"],[8,"DynasmLabelApi"],[3,"SimpleAssembler"],[3,"VecAssembler"],[3,"Assembler"],[3,"Modifier"],[3,"UncommittedModifier"],[8,"Register"],[3,"ImpossibleRelocation"],[3,"X64Relocation"],[3,"X86Relocation"]]}\
}');
initSearch(searchIndex);// I'm sorry
var path = document.getElementsByClassName("logo-container")[0].childNodes[0].getAttribute("src");
var nest_count = (path.match(/\.\./g)||[]).length + 1; 

var base_path = "";
for (i = 0; i < nest_count; i++) {
    base_path += "../";
}

var sidebar = document.getElementsByClassName("sidebar")[0];

var node = document.createElement("div");
node.innerHTML = '\
  <p class="location">\
      <a href="' + base_path + 'language/index.html">dynasm-rs</a>\
  </p>\
  <div class = "block modules">\
    <h3>Components</h3>\
    <ul>\
      <li>\
        <a href="' + base_path + 'language/index.html">Syntax</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'plugin/dynasm/index.html">Plugin (dynasm)</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'runtime/dynasmrt/index.html">Runtime (dynasmrt)</a>\
      </li>\
    </ul>\
  </div>';

sidebar.insertBefore(node, sidebar.childNodes[2]);
