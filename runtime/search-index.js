var N=null,E="",T="t",U="u",searchIndex={};
var R=["assemblyoffset","dynasmerror","result","dynasmrt","This struct is a wrapper around an `Assembler` normally…","assembler","dynamiclabel","uncommittedmodifier","executablebuffer","Sets the current modification offset to the given value","Checks that the current modification offset is not larger…","check_exact","Checks that the current modification offset is exactly the…","Assembler","This struct is an implementation of a dynasm runtime. It…","AssemblyModifier","Create a new `Assembler` instance This function will…","new_dynamic_label","Create a new dynamic label that can be referenced and…","get_dynamic_label_offset","Query the offset of a dynamic label.","To allow already committed code to be altered, this method…","alter_uncommitted","Similar to `Assembler::alter`, this method allows…","Commit the assembled code from a temporary buffer to the…","finalize","Consumes the assembler to return the internal…","Creates a read-only reference to the internal…","executor","Helper function for validating that a given value can be…","option","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","dynasmrt::common","dynasmrt::x64","dynasmrt::x86","dynasmrt::aarch64","offset","global_label","global_reloc","dynamic_label","dynamic_reloc","local_label","forward_reloc","backward_reloc","bare_reloc","ordering","extend","formatter","AssemblyOffset","DynasmError","UncommittedModifier","DynasmApi","DynasmLabelApi","ExecutableBuffer","Executor","DynamicLabel"];
searchIndex["dynasmrt"]={"doc":E,"i":[[3,R[55],R[3],"A struct representing an offset into the assembling buffer…",N,N],[12,"0",E,E,0,N],[3,R[62],E,"A dynamic label",N,N],[3,R[60],E,"A structure holding a buffer of executable memory",N,N],[3,R[61],E,"A read-only shared reference to the executable buffer…",N,N],[4,R[56],E,"An error type that is returned from various check and…",N,N],[13,"CheckFailed",E,E,1,N],[0,"common",E,E,N,N],[3,R[57],R[39],R[4],N,N],[11,"new",E,"create a new uncommittedmodifier",2,[[[R[0]],["vec"]],[R[7]]]],[11,"goto",E,R[9],2,[[["self"],[R[0]]]]],[11,"check",E,R[10],2,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[11,R[11],E,R[12],2,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[0,"x64",R[3],E,N,N],[3,R[13],R[40],R[14],N,N],[3,R[15],E,R[4],N,N],[11,"new",E,R[16],3,[[],[[R[2],[R[5]]],[R[5]]]]],[11,R[17],E,R[18],3,[[["self"]],[R[6]]]],[11,R[19],E,R[20],3,[[["self"],[R[6]]],[[R[30],[R[0]]],[R[0]]]]],[11,"alter",E,R[21],3,[[["self"],["f"]],["o"]]],[11,R[22],E,R[23],3,[[["self"]],[R[7]]]],[11,"commit",E,R[24],3,[[["self"]]]],[11,R[25],E,R[26],3,[[],[[R[5]],[R[8]],[R[2],[R[8],R[5]]]]]],[11,"reader",E,R[27],3,[[["self"]],[R[28]]]],[11,"goto",E,R[9],4,[[["self"],[R[0]]]]],[11,"check",E,R[10],4,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[11,R[11],E,R[12],4,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[0,"x86",R[3],E,N,N],[3,R[13],R[41],R[14],N,N],[3,R[15],E,R[4],N,N],[11,"new",E,R[16],5,[[],[[R[2],[R[5]]],[R[5]]]]],[11,R[17],E,R[18],5,[[["self"]],[R[6]]]],[11,R[19],E,R[20],5,[[["self"],[R[6]]],[[R[30],[R[0]]],[R[0]]]]],[11,"alter",E,R[21],5,[[["self"],["f"]],["o"]]],[11,R[22],E,R[23],5,[[["self"]],[R[7]]]],[11,"commit",E,R[24],5,[[["self"]]]],[11,R[25],E,R[26],5,[[],[[R[5]],[R[2],[R[8],R[5]]],[R[8]]]]],[11,"reader",E,R[27],5,[[["self"]],[R[28]]]],[11,"goto",E,R[9],6,[[["self"],[R[0]]]]],[11,"check",E,R[10],6,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[11,R[11],E,R[12],6,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[0,"aarch64",R[3],E,N,N],[3,R[13],R[42],R[14],N,N],[3,R[15],E,R[4],N,N],[5,"encode_logical_immediate_32bit",E,R[29],N,[[["u32"]],[["u16"],[R[30],["u16"]]]]],[5,"encode_logical_immediate_64bit",E,R[29],N,[[["u64"]],[["u16"],[R[30],["u16"]]]]],[5,"encode_floating_point_immediate",E,R[29],N,[[["f32"]],[[R[30],["u8"]],["u8"]]]],[11,"new",E,R[16],7,[[],[[R[2],[R[5]]],[R[5]]]]],[11,R[17],E,R[18],7,[[["self"]],[R[6]]]],[11,R[19],E,R[20],7,[[["self"],[R[6]]],[[R[30],[R[0]]],[R[0]]]]],[11,"alter",E,R[21],7,[[["self"],["f"]],["o"]]],[11,R[22],E,R[23],7,[[["self"]],[R[7]]]],[11,"commit",E,R[24],7,[[["self"]]]],[11,R[25],E,R[26],7,[[],[[R[5]],[R[8]],[R[2],[R[8],R[5]]]]]],[11,"reader",E,R[27],7,[[["self"]],[R[28]]]],[11,"goto",E,R[9],8,[[["self"],[R[0]]]]],[11,"check",E,R[10],8,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[11,R[11],E,R[12],8,[[["self"],[R[0]]],[[R[1]],[R[2],[R[1]]]]]],[8,R[58],R[3],"This trait represents the interface that must be…",N,N],[10,R[43],E,"Report the current offset into the assembling target",9,[[["self"]],[R[0]]]],[10,"push",E,"Push a byte into the assembling target",9,[[["self"],["u8"]]]],[11,"push_i8",E,"Push a signed byte into the assembling target",9,[[["self"],["i8"]]]],[11,"push_i16",E,"Push a signed word into the assembling target",9,[[["self"],["i16"]]]],[11,"push_i32",E,"Push a signed doubleword into the assembling target",9,[[["self"],["i32"]]]],[11,"push_i64",E,"Push a signed quadword into the assembling target",9,[[["self"],["i64"]]]],[11,"push_u16",E,"Push an usigned word into the assembling target",9,[[["self"],["u16"]]]],[11,"push_u32",E,"Push an usigned doubleword into the assembling target",9,[[["self"],["u32"]]]],[11,"push_u64",E,"Push an usigned quadword into the assembling target",9,[[["self"],["u64"]]]],[11,"runtime_error",E,"This function is called in when a runtime error has to be…",9,[[["self"],["str"]]]],[8,R[59],E,"This trait extends DynasmApi to not only allow assembling,…",N,N],[16,"Relocation",E,E,10,N],[10,"align",E,"Push nops until the assembling target end is aligned to…",10,[[["self"],["usize"]]]],[10,R[48],E,"Record the definition of a local label",10,[[["self"],["str"]]]],[10,R[44],E,"Record the definition of a global label",10,[[["self"],["str"]]]],[10,R[46],E,"Record the definition of a dynamic label",10,[[["self"],[R[6]]]]],[10,R[49],E,"Record a relocation spot for a forward reference to a…",10,[[["self"],["str"]]]],[10,R[50],E,"Record a relocation spot for a backward reference to a…",10,[[["self"],["str"]]]],[10,R[45],E,"Record a relocation spot for a reference to a global label",10,[[["self"],["str"]]]],[10,R[47],E,"Record a relocation spot for a reference to a dynamic label",10,[[["self"],[R[6]]]]],[10,R[51],E,"Record a relocation spot to an arbitrary target",10,[[["self"],["usize"]]]],[11,"ptr",E,"Obtain a pointer into the executable memory from an offset…",11,[[["self"],[R[0]]]]],[11,"lock",E,"Gain read-access to the internal `ExecutableBuffer`. While…",12,[[["self"]],[["rwlockreadguard",[R[8]]],[R[8]]]]],[14,"Pointer",E,"This macro takes a *const pointer from the source operand,…",N,N],[14,"MutPointer",E,"Preforms the same action as the `Pointer!` macro, but…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[33],E,E,0,[[[U]],[R[2]]]],[11,R[34],E,E,0,[[],[R[2]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"]],[R[38]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[31],E,E,13,[[["self"]],[T]]],[11,R[32],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,R[33],E,E,13,[[[U]],[R[2]]]],[11,R[34],E,E,13,[[],[R[2]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[37],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[["self"]],[R[38]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[33],E,E,11,[[[U]],[R[2]]]],[11,R[34],E,E,11,[[],[R[2]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"]],[R[38]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[31],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,R[33],E,E,12,[[[U]],[R[2]]]],[11,R[34],E,E,12,[[],[R[2]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[["self"]],[R[38]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"],[T]]]],[11,"to_string",E,E,1,[[["self"]],["string"]]],[11,"into",E,E,1,[[],[U]]],[11,R[33],E,E,1,[[[U]],[R[2]]]],[11,R[34],E,E,1,[[],[R[2]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"]],[R[38]]]],[11,"from",R[39],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[33],E,E,2,[[[U]],[R[2]]]],[11,R[34],E,E,2,[[],[R[2]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[["self"]],[R[38]]]],[11,"from",R[40],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[33],E,E,3,[[[U]],[R[2]]]],[11,R[34],E,E,3,[[],[R[2]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"]],[R[38]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[33],E,E,4,[[[U]],[R[2]]]],[11,R[34],E,E,4,[[],[R[2]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"]],[R[38]]]],[11,"from",R[41],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[33],E,E,5,[[[U]],[R[2]]]],[11,R[34],E,E,5,[[],[R[2]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"]],[R[38]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[33],E,E,6,[[[U]],[R[2]]]],[11,R[34],E,E,6,[[],[R[2]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[["self"]],[R[38]]]],[11,"from",R[42],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[33],E,E,7,[[[U]],[R[2]]]],[11,R[34],E,E,7,[[],[R[2]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[["self"]],[R[38]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[33],E,E,8,[[[U]],[R[2]]]],[11,R[34],E,E,8,[[],[R[2]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"]],[R[38]]]],[11,R[43],R[39],E,2,[[["self"]],[R[0]]]],[11,"push",E,E,2,[[["self"],["u8"]]]],[11,R[43],R[40],E,3,[[["self"]],[R[0]]]],[11,"push",E,E,3,[[["self"],["u8"]]]],[11,R[43],E,E,4,[[["self"]],[R[0]]]],[11,"push",E,E,4,[[["self"],["u8"]]]],[11,R[43],R[41],E,5,[[["self"]],[R[0]]]],[11,"push",E,E,5,[[["self"],["u8"]]]],[11,R[43],E,E,6,[[["self"]],[R[0]]]],[11,"push",E,E,6,[[["self"],["u8"]]]],[11,R[43],R[42],E,7,[[["self"]],[R[0]]]],[11,"push",E,E,7,[[["self"],["u8"]]]],[11,R[43],E,E,8,[[["self"]],[R[0]]]],[11,"push",E,E,8,[[["self"],["u8"]]]],[11,"align",R[40],E,3,[[["self"],["usize"]]]],[11,R[44],E,E,3,[[["self"],["str"]]]],[11,R[45],E,E,3,[[["self"],["str"]]]],[11,R[46],E,E,3,[[["self"],[R[6]]]]],[11,R[47],E,E,3,[[["self"],[R[6]]]]],[11,R[48],E,E,3,[[["self"],["str"]]]],[11,R[49],E,E,3,[[["self"],["str"]]]],[11,R[50],E,E,3,[[["self"],["str"]]]],[11,R[51],E,E,3,[[["self"],["usize"]]]],[11,"align",E,E,4,[[["self"],["usize"]]]],[11,R[44],E,E,4,[[["self"],["str"]]]],[11,R[45],E,E,4,[[["self"],["str"]]]],[11,R[46],E,E,4,[[["self"],[R[6]]]]],[11,R[47],E,E,4,[[["self"],[R[6]]]]],[11,R[48],E,E,4,[[["self"],["str"]]]],[11,R[49],E,E,4,[[["self"],["str"]]]],[11,R[50],E,E,4,[[["self"],["str"]]]],[11,R[51],E,E,4,[[["self"],["usize"]]]],[11,"align",R[41],E,5,[[["self"],["usize"]]]],[11,R[44],E,E,5,[[["self"],["str"]]]],[11,R[45],E,E,5,[[["self"],["str"]]]],[11,R[46],E,E,5,[[["self"],[R[6]]]]],[11,R[47],E,E,5,[[["self"],[R[6]]]]],[11,R[48],E,E,5,[[["self"],["str"]]]],[11,R[49],E,E,5,[[["self"],["str"]]]],[11,R[50],E,E,5,[[["self"],["str"]]]],[11,R[51],E,E,5,[[["self"],["usize"]]]],[11,"align",E,E,6,[[["self"],["usize"]]]],[11,R[44],E,E,6,[[["self"],["str"]]]],[11,R[45],E,E,6,[[["self"],["str"]]]],[11,R[46],E,E,6,[[["self"],[R[6]]]]],[11,R[47],E,E,6,[[["self"],[R[6]]]]],[11,R[48],E,E,6,[[["self"],["str"]]]],[11,R[49],E,E,6,[[["self"],["str"]]]],[11,R[50],E,E,6,[[["self"],["str"]]]],[11,R[51],E,E,6,[[["self"],["usize"]]]],[11,"align",R[42],E,7,[[["self"],["usize"]]]],[11,R[44],E,E,7,[[["self"],["str"]]]],[11,R[45],E,E,7,[[["self"],["str"]]]],[11,R[46],E,E,7,[[["self"],[R[6]]]]],[11,R[47],E,E,7,[[["self"],[R[6]]]]],[11,R[48],E,E,7,[[["self"],["str"]]]],[11,R[49],E,E,7,[[["self"],["str"]]]],[11,R[50],E,E,7,[[["self"],["str"]]]],[11,R[51],E,E,7,[[["self"],["usize"]]]],[11,"align",E,E,8,[[["self"],["usize"]]]],[11,R[44],E,E,8,[[["self"],["str"]]]],[11,R[45],E,E,8,[[["self"],["str"]]]],[11,R[46],E,E,8,[[["self"],[R[6]]]]],[11,R[47],E,E,8,[[["self"],[R[6]]]]],[11,R[48],E,E,8,[[["self"],["str"]]]],[11,R[49],E,E,8,[[["self"],["str"]]]],[11,R[50],E,E,8,[[["self"],["str"]]]],[11,R[51],E,E,8,[[["self"],["usize"]]]],[11,"eq",R[3],E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[6]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[6]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,13,[[["self"]],[R[6]]]],[11,"clone",E,E,12,[[["self"]],[R[28]]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"partial_cmp",E,E,0,[[["self"],[R[0]]],[[R[52]],[R[30],[R[52]]]]]],[11,"lt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,R[53],R[39],E,2,[[["self"],[T]]]],[11,R[53],E,E,2,[[["self"],[T]]]],[11,R[53],R[40],E,3,[[["self"],[T]]]],[11,R[53],E,E,3,[[["self"],[T]]]],[11,R[53],E,E,4,[[["self"],[T]]]],[11,R[53],E,E,4,[[["self"],[T]]]],[11,R[53],R[41],E,5,[[["self"],[T]]]],[11,R[53],E,E,5,[[["self"],[T]]]],[11,R[53],E,E,6,[[["self"],[T]]]],[11,R[53],E,E,6,[[["self"],[T]]]],[11,R[53],R[42],E,7,[[["self"],[T]]]],[11,R[53],E,E,7,[[["self"],[T]]]],[11,R[53],E,E,8,[[["self"],[T]]]],[11,R[53],E,E,8,[[["self"],[T]]]],[11,"cmp",R[3],E,0,[[["self"],[R[0]]],[R[52]]]],[11,"fmt",E,E,1,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",R[40],E,3,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",R[41],E,5,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",R[42],E,7,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",R[3],E,0,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[54]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[54]]],[R[2]]]],[11,"deref",E,E,11,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"description",E,E,1,[[["self"]],["str"]]]],"p":[[3,R[55]],[4,R[56]],[3,R[57]],[3,R[13]],[3,R[15]],[3,R[13]],[3,R[15]],[3,R[13]],[3,R[15]],[8,R[58]],[8,R[59]],[3,R[60]],[3,R[61]],[3,R[62]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);// I'm sorry
var path = document.getElementsByClassName("logo-container")[0].childNodes[0].getAttribute("src");
var nest_count = (path.match(/\.\./g)||[]).length + 1; 

var base_path = "";
for (i = 0; i < nest_count; i++) {
    base_path += "../";
}

var sidebar = document.getElementsByClassName("sidebar")[0];

var node = document.createElement("div");
node.innerHTML = '\
  <p class="location">\
      <a href="' + base_path + 'language/index.html">dynasm-rs</a>\
  </p>\
  <div class = "block modules">\
    <h3>Components</h3>\
    <ul>\
      <li>\
        <a href="' + base_path + 'language/index.html">Syntax</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'plugin/dynasm/index.html">Plugin (dynasm)</a>\
      </li>\
      <li>\
        <a href="' + base_path + 'runtime/dynasmrt/index.html">Runtime (dynasmrt)</a>\
      </li>\
    </ul>\
  </div>';

sidebar.insertBefore(node, sidebar.childNodes[2]);
